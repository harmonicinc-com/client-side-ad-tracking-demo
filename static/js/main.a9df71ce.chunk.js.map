{"version":3,"sources":["AdTrackingContext.js","AdPodList.js","ErrorContext.js","useInterval.js","SessionContext.js","SimpleAdTracker.js","AdTrackingPlaybackSessionProvider.js","ShakaPlayer.js","PlayerContainer.js","InfoSection.js","App.js","reportWebVitals.js","index.js"],"names":["AdTrackingContext","React","createContext","useStyles","makeStyles","theme","itemText","fontSize","whiteSpace","overflow","textOverflow","podItem","podItemOnAir","backgroundColor","background","adItem","paddingLeft","spacing","adItemOnAir","trackingUrlItem","paddingTop","paddingBottom","greenIcon","color","redIcon","AdPodList","classes","adTrackingContext","useContext","useState","expandPods","setExpandPods","expandAds","setExpandAds","pods","adPods","playheadInMs","lastPlayheadTime","shouldExpandPod","pod","id","startTime","duration","shouldExpandAd","ad","className","List","map","ListItem","button","onClick","newState","Object","keys","filter","key","find","p","forEach","toggleExpandPod","ListItemIcon","ListItemText","disableTypography","Date","toLocaleString","toFixed","Collapse","in","timeout","unmountOnExit","ads","startsWith","toggleExpandAd","trackingUrls","trackingUrl","index","reportingState","event","url","ErrorContext","errors","reportError","message","acknowledgeError","DefaultErrorContextProvider","props","setErrors","Provider","value","acknowledged","error","children","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","SessionContext","AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS","mergeAds","existingAds","updated","i","adId","a","splice","length","existingAd","t","push","SimpleAdTracker","this","lastPlayheadUpdateTime","listeners","listener","indexOf","existingPods","podId","existingPod","mergePods","notifyListeners","time","now","getTime","speed","iterateTrackingEvents","sendBeacon","handler","time0","time1","fetch","response","status","AdTrackingPlaybackSessionProvider","history","useHistory","location","useLocation","urlQueryParam","URLSearchParams","search","get","errorContext","adTrackerRef","presentationStartTimeRef","localSessionId","mediaUrl","manifestUrl","adTrackingMetadataUrl","sessionInfo","setSessionInfo","setLastPlayheadTime","setAdPods","rewriteUrlToMetadataUrl","replace","refreshMetadata","useCallback","Error","json","dashAvailabilityStartTime","updatePods","console","loadMedia","redirect","cache","redirected","includes","addUpdateListener","getAdPods","toISOString","sessionContext","presentationStartTime","load","encodeURIComponent","unload","updatePlayheadTime","pause","resume","mute","unmute","ShakaPlayer","videoRef","createRef","containerRef","player","lastMuted","paused","window","muxjs","video","container","shaka","Player","configure","muted","ui","Overlay","controlPanelElements","addEventListener","onTimeUpdate","currentTime","err","onError","onResume","onPaused","onMute","onUnmute","getPlayheadTimeAsDate","ref","style","maxWidth","width","data-shaka-player","height","autoPlay","Component","PlayerContainer","shakaRef","localSessionRef","rawCurrentTime","setRawCurrentTime","playhead","setPlayhead","timeToNextBreak","Math","min","Infinity","clockTime","log","ceil","buttons","marginRight","InfoSection","urlInputRef","preventDefault","entries","Snackbar","anchorOrigin","vertical","horizontal","open","elevation","variant","severity","onClose","errorKey","Typography","gutterBottom","TextField","inputRef","label","fullWidth","defaultValue","Box","display","flexDirection","Button","Link","href","paper","padding","textAlign","palette","text","secondary","App","basename","process","exact","path","Container","Grid","item","xs","Paper","square","sm","Tabs","indicatorColor","textColor","Tab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.a9df71ce.chunk.js","sourcesContent":["import React from 'react';\n\nconst AdTrackingContext = React.createContext();\n\nexport default AdTrackingContext;\n","import { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Collapse, List, ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport AdTrackingContext from './AdTrackingContext';\n\nconst useStyles = makeStyles((theme) => ({\n  itemText: {\n    fontSize: 13,\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  podItem: {\n  },\n  podItemOnAir: {\n    backgroundColor: \"#42a5f5\",\n    '&:hover': {\n      background: \"#2196f3\",\n    }\n  },\n  adItem: {\n    paddingLeft: theme.spacing(4),\n  },\n  adItemOnAir: {\n    paddingLeft: theme.spacing(4),\n    backgroundColor: \"#90caf9\",\n    '&:hover': {\n      background: \"#64b5f6\",\n    }\n  },\n  trackingUrlItem: {\n    paddingLeft: theme.spacing(8),\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(1)\n  },\n  greenIcon: {\n    color: 'green'\n  },\n  redIcon: {\n    color: 'red'\n  }\n}));\n\nfunction AdPodList() {\n  const classes = useStyles();\n\n  const adTrackingContext = useContext(AdTrackingContext);\n\n  const [expandPods, setExpandPods] = useState({});\n\n  const [expandAds, setExpandAds] = useState({});\n\n  const pods = adTrackingContext.adPods ? adTrackingContext.adPods : [];\n\n  const playheadInMs = adTrackingContext.lastPlayheadTime;\n\n  const shouldExpandPod = (pod) => {\n    const keepPastPodFor = 2000;\n    if (pod.id in expandPods) {\n      return expandPods[pod.id];\n    } else {\n      return playheadInMs !== null && playheadInMs < pod.startTime + pod.duration + keepPastPodFor;\n    }\n  }\n\n  const toggleExpandPod = (pod) => {\n    const newState = {\n      ...expandPods,\n      [pod.id]: !shouldExpandPod(pod)\n    };\n    Object.keys(expandPods)\n      .filter(key => !pods.find(p => p.id === key))\n      .forEach(key => delete newState[key]);\n    setExpandPods(newState);\n  }\n\n  const shouldExpandAd = (ad, pod) => {\n    const keepPastAdFor = 2000;\n    if (pod.id + '/' + ad.id in expandAds) {\n      return expandAds[pod.id + '/' + ad.id];\n    } else {\n      return playheadInMs !== null && playheadInMs < ad.startTime + ad.duration + keepPastAdFor;\n    }\n  }\n\n  const toggleExpandAd = (ad, pod) => {\n    const newState = {\n      ...expandAds,\n      [pod.id + '/' + ad.id]: !shouldExpandAd(ad, pod)\n    };\n    Object.keys(expandAds)\n      .filter(key => !pods.find(p => key.startsWith(p.id + '/')))\n      .forEach(key => delete newState[key]);\n    setExpandAds(newState);\n  };\n\n  return (\n    <div className=\"ad-pod-list\">\n      {pods ?\n        <List>\n          {pods.map((pod) =>\n            <div key={pod.id}>\n              <ListItem button onClick={() => toggleExpandPod(pod)} className={pod.startTime < playheadInMs && playheadInMs < pod.startTime + pod.duration ? classes.podItemOnAir : classes.podItem}>\n                <ListItemIcon>\n                  <FolderIcon />\n                </ListItemIcon>\n                <ListItemText disableTypography className={classes.itemText}>\n                  <div>\n                    Ad Pod: {pod.id}\n                  </div>\n                  <div>\n                    Time: {new Date(pod.startTime).toLocaleString()}, Duration: {(pod.duration / 1000).toFixed(1)}s\n                  </div>\n                </ListItemText>\n                {shouldExpandPod(pod) ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse key={pod.id + \".ads\"} in={shouldExpandPod(pod)} timeout=\"auto\" unmountOnExit>\n                <List>\n                  {pod.ads.map((ad) =>\n                    <div key={ad.id}>\n                      <ListItem button onClick={() => toggleExpandAd(ad, pod)} className={ad.startTime < playheadInMs && playheadInMs < ad.startTime + ad.duration ? classes.adItemOnAir : classes.adItem}>\n                        <ListItemIcon>\n                          <MovieIcon />\n                        </ListItemIcon>\n                        <ListItemText disableTypography className={classes.itemText}>\n                          <div>\n                            Ad: {ad.id}\n                          </div>\n                          <div>\n                            Time: {new Date(ad.startTime).toLocaleString()}, Duration: {(ad.duration / 1000).toFixed(1)}s\n                          </div>\n                        </ListItemText>\n                        {shouldExpandAd(ad, pod) ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse key={ad.id + \".trackingUrls\"} in={shouldExpandAd(ad, pod)} timeout=\"auto\" unmountOnExit>\n                        <List>\n                          {ad.trackingUrls ? \n                            ad.trackingUrls.map((trackingUrl,index) =>\n                              <ListItem key={index} className={classes.trackingUrlItem}>\n                                <ListItemIcon>\n                                  {trackingUrl.reportingState === \"IDLE\" ? <RadioButtonUncheckedIcon /> : null}\n                                  {trackingUrl.reportingState === \"REPORTING\" ? <HourglassFullIcon /> : null}\n                                  {trackingUrl.reportingState === \"DONE\" ? <CheckCircleIcon className={classes.greenIcon} /> : null}\n                                  {trackingUrl.reportingState === \"ERROR\" ? <ErrorIcon className={classes.redIcon} /> : null}\n                                </ListItemIcon>\n                                <ListItemText disableTypography className={classes.itemText}>\n                                  <div>\n                                    Event: {trackingUrl.event}\n                                  </div>\n                                  <div>\n                                    URL: {trackingUrl.url}\n                                  </div>\n                                  {trackingUrl.startTime ?\n                                    <div>\n                                      Time: {new Date(trackingUrl.startTime).toLocaleString()}\n                                    </div>\n                                    : null}\n                                </ListItemText>\n                              </ListItem>\n                            )\n                            : null\n                          }\n                        </List>\n                      </Collapse>\n                    </div>\n                  )}\n                </List>\n              </Collapse>\n            </div>\n          )}\n        </List>\n        : null\n      }\n    </div>\n  );\n}\n\nexport default AdPodList;\n","import React, { useState } from 'react';\n\nconst ErrorContext = React.createContext({\n    errors: {},\n    reportError: (key, message) => {},\n    acknowledgeError: (key) => {}\n});\n\nfunction DefaultErrorContextProvider(props) {\n    const [errors, setErrors] = useState({});\n\n    const reportError = (key, message) => {\n        setErrors({\n            ...errors,\n            [key]: {\n                message: message,\n                acknowledged: false\n            }\n        });\n    }\n\n    const acknowledgeError = (key) => {\n        const error = errors[key];\n        if (error) {\n            setErrors({\n                ...errors,\n                [key]: {\n                    ...error,\n                    acknowledged: true\n                }\n            });\n        }\n    }\n\n    return (\n        <ErrorContext.Provider value={{errors, reportError, acknowledgeError}}>\n            {props.children}\n        </ErrorContext.Provider>\n    );\n}\n\nexport { ErrorContext, DefaultErrorContextProvider } ;\n","// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;","import React from 'react';\n\nconst SessionContext = React.createContext();\n\nexport default SessionContext;\n","const AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS = 500;\nconst MAX_TOLERANCE_IN_SPEED = 2;\n\nconst mergePods = (existingPods, pods) => {\n    let updated = false;\n\n    for (let i = existingPods.length - 1; i >= 0; i--) {\n        const podId = existingPods[i].id;\n        if (!pods.find(p => p.id === podId)) {\n            existingPods.splice(i, 1);\n            updated = true;\n        }\n    }\n    pods.forEach((pod) => {\n        let existingPod = existingPods.find(p => p.id === pod.id);\n        if (!existingPod) {\n            existingPod = {\n                id: pod.id,\n                startTime: pod.startTime,\n                duration: pod.duration,\n                ads: []\n            };\n            existingPods.push(existingPod);\n            updated = true;\n        } else if (existingPod.duration !== pod.duration) {\n            existingPod.duration = pod.duration;\n            updated = true;\n        }\n        updated = mergeAds(existingPod.ads, pod.ads) || updated;\n    });\n\n    return updated;\n}\n\nconst mergeAds = (existingAds, ads) => {\n    let updated = false;\n\n    for (let i = existingAds.length - 1; i >= 0; i--) {\n        const adId = existingAds[i].id;\n        if (!ads.find(a => a.id === adId)) {\n            existingAds.splice(i, 1);\n            updated = true;\n        }\n    }\n    ads.forEach((ad) => {            \n        let existingAd = existingAds.find(a => a.id === ad.id);\n        if (!existingAd) {\n            existingAd = {\n                id: ad.id,\n                startTime: ad.startTime,\n                duration: ad.duration,\n                trackingUrls: ad.trackingUrls.map(t => ({\n                    event: t.event,\n                    startTime: t.startTime,\n                    url: t.url,\n                    reportingState: \"IDLE\"\n                }))\n            };\n            existingAds.push(existingAd);\n            updated = true;\n        } else if (existingAd.duration !== ad.duration) {\n            existingAd.duration = ad.duration;\n            updated = true;\n        }\n    });\n\n    return updated;\n}\n\nclass SimpleAdTracker {\n\n    constructor() {\n        this.adPods = [];\n        this.lastPlayheadTime = null;\n        this.lastPlayheadUpdateTime = null;\n        this.listeners = [];\n    }\n\n    addUpdateListener(listener) {\n        this.listeners.push(listener);\n    }\n\n    removeUpdateListener(listener) {\n        const index = this.listeners.indexOf(listener);\n        if (index !== -1) {\n            this.listeners.splice(index, 1);\n        }\n    }\n\n    updatePods(pods) {\n        const updated = mergePods(this.adPods, pods);\n        if (updated) {\n            this.notifyListeners();\n        }\n    }\n\n    updatePlayheadTime(time) {\n        const now = new Date().getTime();\n        if (this.lastPlayheadUpdateTime) {\n            if (now === this.lastPlayheadUpdateTime) {\n                return;\n            }\n\n            const speed = (time - this.lastPlayheadTime) / (now - this.lastPlayheadUpdateTime);\n            if (speed > 0 && speed <= MAX_TOLERANCE_IN_SPEED) {\n                this.iterateTrackingEvents((trackingUrl) => {\n                    if (trackingUrl.startTime && trackingUrl.reportingState === \"IDLE\" &&\n                        this.lastPlayheadTime < trackingUrl.startTime && trackingUrl.startTime <= time) {\n                        this.sendBeacon(trackingUrl);\n                    }\n                }, this.lastPlayheadTime, time);\n            }\n        }\n        this.lastPlayheadTime = time;\n        this.lastPlayheadUpdateTime = now;\n    }\n\n    getAdPods() {\n        return this.adPods;\n    }\n\n    pause() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"pause\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    resume() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"resume\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    mute() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"mute\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    unmute() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"unmute\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    // private\n\n    notifyListeners() {\n        this.listeners.forEach((listener) => {\n            listener();\n        });\n    };\n    \n    iterateTrackingEvents(handler, time0 = this.lastPlayheadTime, time1 = this.lastPlayheadTime) {\n        this.adPods.forEach((pod) => {\n            if (pod.startTime <= time1 && time0 <= pod.startTime + pod.duration + AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS) {\n                pod.ads.forEach((ad) => {\n                    if (ad.startTime <= time1 && time0 <= ad.startTime + ad.duration + AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS) {\n                        ad.trackingUrls.forEach((trackingUrl) => {\n                            handler(trackingUrl, ad, pod);\n                        });\n                    }\n                });\n            }\n        });\n    }\n\n    async sendBeacon(trackingUrl) {\n        trackingUrl.reportingState = \"REPORTING\";\n        this.notifyListeners();\n    \n        try {\n            const response = await fetch(trackingUrl.url);\n            if (response.status >= 200 && response.status <= 299) {\n                trackingUrl.reportingState = \"DONE\";\n            } else {\n                trackingUrl.reportingState = \"ERROR\";\n            }\n            this.notifyListeners();\n        } catch (err) {\n            trackingUrl.reportingState = \"ERROR\";\n            this.notifyListeners();\n        }\n    };\n\n}\n\nexport default SimpleAdTracker;","import { useState, useEffect, useRef, useContext, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport useInterval from './useInterval';\nimport { ErrorContext } from './ErrorContext';\nimport AdTrackingContext from './AdTrackingContext';\nimport SessionContext from './SessionContext';\nimport SimpleAdTracker from './SimpleAdTracker';\n\nconst AdTrackingPlaybackSessionProvider = (props) => {\n    const AD_TRACING_METADATA_FILE_NAME = \"metadata\";\n\n    const history = useHistory();\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const urlQueryParam = searchParams.get(\"url\");\n    \n    const errorContext = useContext(ErrorContext);\n\n    const adTrackerRef = useRef();\n    const presentationStartTimeRef = useRef();\n\n    const [sessionInfo, setSessionInfo] = useState({\n        localSessionId: null,\n        mediaUrl: urlQueryParam,\n        manifestUrl: null,\n        adTrackingMetadataUrl: null,\n    });\n    const [lastPlayheadTime, setLastPlayheadTime] = useState(0);\n    const [adPods, setAdPods] = useState([]);\n\n    const rewriteUrlToMetadataUrl = (url) => {\n        return url.replace(/\\/[^/?]+(\\??[^/]*)$/, '/' + AD_TRACING_METADATA_FILE_NAME + '$1');\n    }\n\n    const refreshMetadata = useCallback(async (url) => {\n        if (url) {\n            const response = await fetch(url);\n            try {\n                if (response.status < 200 || response.status > 299) {\n                    throw new Error(`Get unexpected response code ${response.status}`);\n                }\n                const json = await response.json();\n\n                presentationStartTimeRef.current = json.dashAvailabilityStartTime;\n\n                adTrackerRef.current.updatePods(json.pods || []);\n            } catch (err) {\n                console.error(\"Failed to download metadata for ad tracking\", err);\n                errorContext.reportError(\"metadata.request.failed\", \"Failed to download metadata for ad tracking: \" + err);\n            }\n        }\n    }, [errorContext]);\n\n    const loadMedia = useCallback(async (url) => {\n        let manifestUrl, adTrackingMetadataUrl;\n        try {\n            const response = await fetch(url, { redirect: 'follow', cache: 'reload' });\n            if (response.status < 200 || response.status > 299) {\n                throw new Error(`Get unexpected response code ${response.status}`);\n            }\n\n            if (response.redirected) {\n                manifestUrl = response.url;\n                adTrackingMetadataUrl = rewriteUrlToMetadataUrl(response.url);\n            } else {\n                manifestUrl = url;\n                adTrackingMetadataUrl = rewriteUrlToMetadataUrl(url);\n            }\n        } catch (err) {\n            errorContext.reportError(\"manifest.request.failed\", \"Failed to download manifest: \" + err);\n            return;\n        }\n\n        // workaround HLS issue that video stream needs to get first otherwise there is error \"Manipulated manifest does not contain any segments\"\n        if (manifestUrl.includes('index.m3u8')) {\n            await fetch(manifestUrl.replace(\"index.m3u8\", \"01.m3u8\"));\n        }\n\n        setAdPods([]);\n        adTrackerRef.current = new SimpleAdTracker();\n        adTrackerRef.current.addUpdateListener(() => {\n            setAdPods([...adTrackerRef.current.getAdPods()]);  // trigger re-render\n        });\n\n        setSessionInfo({\n            localSessionId: new Date().toISOString(),\n            mediaUrl: url,\n            manifestUrl: manifestUrl,\n            adTrackingMetadataUrl: adTrackingMetadataUrl\n        });\n\n        await refreshMetadata(adTrackingMetadataUrl);\n    }, [refreshMetadata, errorContext]);\n\n    const unload = () => {\n        setAdPods([]);\n        adTrackerRef.current = new SimpleAdTracker();\n        adTrackerRef.current.addUpdateListener(() => {\n            setAdPods([...adTrackerRef.current.getAdPods()]);  // trigger re-render\n        });\n\n        presentationStartTimeRef.current = null;\n\n        setSessionInfo({\n            localSessionId: null,\n            mediaUrl: null,\n            manifestUrl: null,\n            adTrackingMetadataUrl: null\n        });\n    }\n\n    useEffect(() => {\n        if (sessionInfo.mediaUrl && !sessionInfo.localSessionId) {\n            loadMedia(sessionInfo.mediaUrl);\n        }\n    }, [loadMedia, sessionInfo]);\n\n    useInterval(() => {\n        refreshMetadata(sessionInfo.adTrackingMetadataUrl);\n    }, 4000);\n\n    const sessionContext = {\n        sessionInfo: sessionInfo,\n        presentationStartTime: presentationStartTimeRef.current,\n        load: (url) => {\n            history.replace(\"?url=\" + encodeURIComponent(url));\n            loadMedia(url);\n        },\n        unload: unload\n    };\n\n    const adTrackingContext = {\n        adPods: adPods,\n        lastPlayheadTime: lastPlayheadTime,\n        updatePlayheadTime: (time) => {\n            adTrackerRef.current?.updatePlayheadTime(time);\n            setLastPlayheadTime(time);\n        },\n        pause: () => adTrackerRef.current.pause(),\n        resume: () => adTrackerRef.current.resume(),\n        mute: () => adTrackerRef.current.mute(),\n        unmute: () => adTrackerRef.current.unmute()\n    };\n\n    return (\n        <SessionContext.Provider value={sessionContext}>\n            <AdTrackingContext.Provider value={adTrackingContext}>\n                {props.children}\n            </AdTrackingContext.Provider>\n        </SessionContext.Provider>\n    );\n};\n\nexport default AdTrackingPlaybackSessionProvider;\n","import { createRef, Component } from \"react\";\nimport \"shaka-player/dist/controls.css\";\nimport shaka from \"shaka-player/dist/shaka-player.ui.js\";\nimport muxjs from 'mux.js';\n\nclass ShakaPlayer extends Component {\n  constructor() {\n    super();\n    this.videoRef = createRef();\n    this.containerRef = createRef();\n    this.player = null;\n    this.lastMuted = false;\n    this.paused = false;\n  }\n\n  componentDidMount() {\n    window.muxjs = muxjs;\n\n    const video = this.videoRef.current;\n    const container = this.containerRef.current;\n\n    this.player = new shaka.Player(video);\n    this.player.configure('manifest.defaultPresentationDelay', 12.0 /* seconds */);\n    this.player.configure('manifest.dash.ignoreSuggestedPresentationDelay', true);\n    // this.player.configure('manifest.availabilityWindowOverride', 105.0);\n    this.lastMuted = video.muted;\n\n    const ui = new shaka.ui.Overlay(this.player, container, video);\n    ui.configure({\n      controlPanelElements: [\n        \"play_pause\",\n        \"mute\",\n        \"volume\",\n        \"fullscreen\",\n        \"overflow_menu\"\n      ]\n    });\n\n    video.addEventListener('timeupdate', () => this.props.onTimeUpdate?.(video.currentTime));\n    video.addEventListener('error', (err) => this.props.onError?.(err));\n    video.addEventListener('playing', () => {\n      if (this.paused) {\n        this.props.onResume?.();\n        this.paused = false;\n      }\n    });\n    video.addEventListener('pause', () => {\n      this.props.onPaused?.();\n      this.paused = true;\n    });\n    video.addEventListener('volumechange', () => {\n      if (video.muted && !this.lastMuted) {\n        this.props.onMute?.();\n      } else if (!video.muted && this.lastMuted) {\n        this.props.onUnmute?.();\n      }\n      this.lastMuted = video.muted;\n    });\n  }\n\n  load(url) {\n    this.player.load(url);\n    this.paused = false;\n  }\n\n  unload() {\n    this.player.unload();\n    this.paused = false;\n  }\n\n  getPlayheadTimeAsDate() {\n    return this.player.getPlayheadTimeAsDate();\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.containerRef}\n        style={{ maxWidth: this.props.width }}>\n        <video\n            data-shaka-player\n            ref={this.videoRef}\n            style={{ width: \"100%\", height: \"100%\", backgroundColor: \"black\" }}\n            autoPlay={true}>\n        </video>\n      </div>\n    );\n  }\n}\n\nexport default ShakaPlayer;\n","import { useContext, useEffect, useRef, useState } from 'react';\nimport ShakaPlayer from './ShakaPlayer';\nimport SessionContext from './SessionContext';\nimport AdTrackingContext from './AdTrackingContext';\n\nfunction PlayerContainer() {\n    const sessionContext = useContext(SessionContext);\n\n    const sessionInfo = sessionContext.sessionInfo;\n\n    const adTrackingContext = useContext(AdTrackingContext);\n\n    const shakaRef = useRef();\n\n    const localSessionRef = useRef(); \n\n    const [rawCurrentTime, setRawCurrentTime] = useState(0);\n\n    const [playhead, setPlayhead] = useState(null);\n\n    const updateTime = (time) => {\n        setRawCurrentTime(time);\n\n        if (sessionInfo.manifestUrl?.includes(\".m3u8\")) {\n            const clockTime = shakaRef.current.getPlayheadTimeAsDate()?.getTime() || 0;\n            adTrackingContext.updatePlayheadTime(clockTime);\n            setPlayhead(clockTime);\n        } else if (sessionInfo.manifestUrl?.includes(\".mpd\")) {\n            const clockTime = sessionContext.presentationStartTime + time * 1000;\n            adTrackingContext.updatePlayheadTime(clockTime);\n            setPlayhead(clockTime);\n        }\n    };\n\n    const onError = (error) => {\n      console.error(\"Error from player\", error);\n    }\n\n    const timeToNextBreak = Math.min(Infinity,\n        ...adTrackingContext.adPods.filter(p => p.startTime > playhead).map(p => p.startTime)) - playhead;\n\n    useEffect(() => {\n        if (shakaRef.current && localSessionRef.current !== sessionInfo.localSessionId) {\n            if (sessionInfo.manifestUrl) {\n                shakaRef.current.load(sessionInfo.manifestUrl);\n            } else {\n                shakaRef.current.unload();\n            }\n            localSessionRef.current = sessionInfo.localSessionId\n        }\n    }, [shakaRef, sessionInfo]);\n\n    return (\n        <div>\n            <ShakaPlayer ref={shakaRef}\n                onTimeUpdate={updateTime}\n                onPaused={() => {\n                    console.log('playback paused');\n                    adTrackingContext.pause();\n                }}\n                onResume={() =>{\n                    console.log('playback resumed from pause');\n                    adTrackingContext.resume()\n                }}\n                onMute={() => {\n                    console.log('player muted');\n                    adTrackingContext.mute();\n                }}\n                onUnmute={() => {\n                    console.log('player unmute');\n                    adTrackingContext.unmute();\n                }}\n                onError={onError}/>\n            <div>\n                Raw currentTime from video element: {rawCurrentTime.toFixed(1)}s\n            </div>\n            <div>\n                Playhead date time: {playhead ? new Date(playhead).toLocaleString() : '-'}\n            </div>\n            <div>\n                Time to next ad break: {timeToNextBreak !== Infinity ? Math.ceil(timeToNextBreak/1000).toFixed(0) + 's' : '-'}\n            </div>\n        </div>\n    );\n}\n\nexport default PlayerContainer;\n","import { useContext, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, Link, Snackbar, TextField, Typography } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { ErrorContext } from './ErrorContext';\nimport SessionContext from './SessionContext';\n\nconst useStyles = makeStyles((theme) => ({\n  buttons: {\n    '& > *': {\n      marginRight: theme.spacing(1),\n    },\n  }\n}));\n\nfunction InfoSection() {\n  const classes = useStyles();\n\n  const errorContext = useContext(ErrorContext);\n\n  const sessionContext = useContext(SessionContext);\n\n  const sessionInfo = sessionContext.sessionInfo;\n\n  const urlInputRef = useRef();\n\n  const preventDefault = (event) => event.preventDefault();\n\n  const load = async () => {\n    await sessionContext.load(urlInputRef.current.value);\n  }\n\n  const unload = () => {\n    sessionContext.unload();\n  }\n\n  const closeAlert = (errorKey) => {\n    errorContext.acknowledgeError(errorKey);\n  }\n\n  return (\n    <div>\n      {\n        Object.entries(errorContext.errors).map(([key, error]) => (\n          <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} open={!error.acknowledged}>\n            <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={() => closeAlert(key)}>\n              {error.message}\n            </MuiAlert>\n          </Snackbar>  \n        ))\n      }\n\n      <Typography variant=\"h5\" gutterBottom>\n        Harmonic Client Side Ad Tracking Demo\n      </Typography>\n      <TextField inputRef={urlInputRef} label=\"Media URL\" fullWidth={true} defaultValue={sessionInfo.mediaUrl || ''} />\n      <Box className={classes.buttons} width={1} paddingTop={2} display=\"flex\" flexDirection=\"row\">\n        <Button variant=\"contained\" color=\"primary\" onClick={load}>\n          Load\n        </Button>\n        <Button variant=\"contained\" onClick={unload}>\n          Unload\n        </Button>\n      </Box>\n      <Box width={1} paddingTop={2} display=\"flex\" flexDirection=\"row\">\n        <Link href=\"#\" color=\"inherit\" onClick={preventDefault}>\n          {sessionInfo.manifestUrl ? sessionInfo.manifestUrl : ''}\n        </Link>\n      </Box>\n      <Box width={1} paddingTop={1} display=\"flex\" flexDirection=\"row\">\n        <Link href=\"#\" color=\"inherit\" onClick={preventDefault}>\n          {sessionInfo.adTrackingMetadataUrl ? sessionInfo.adTrackingMetadataUrl : ''}\n        </Link>\n      </Box>\n    </div>\n  );\n}\n\nexport default InfoSection;","import './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport AdPodList from './AdPodList';\nimport { DefaultErrorContextProvider } from './ErrorContext';\nimport AdTrackingPlaybackSessionProvider from './AdTrackingPlaybackSessionProvider';\nimport PlayerContainer from './PlayerContainer';\nimport InfoSection from './InfoSection';\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\">\n        <DefaultErrorContextProvider>\n          <AdTrackingPlaybackSessionProvider>\n            <Container>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Paper square className={classes.paper}>\n                    <InfoSection/>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Paper square className={classes.paper}>\n                    <PlayerContainer/>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Paper square className={classes.paper}>\n                    <Tabs\n                      value={0}\n                      indicatorColor=\"primary\"\n                      textColor=\"primary\">\n                      <Tab label=\"Tracking Events\" />\n                    </Tabs>\n                    <AdPodList />\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Container>\n          </AdTrackingPlaybackSessionProvider>\n        </DefaultErrorContextProvider>\n      </Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}