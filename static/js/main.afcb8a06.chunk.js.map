{"version":3,"sources":["AdTrackingContext.tsx","AdPodList.tsx","ErrorContext.tsx","useInterval.tsx","SessionContext.tsx","SimpleAdTracker.tsx","AdTrackingPlaybackSessionProvider.tsx","ShakaPlayer.tsx","PlayerContainer.tsx","InfoSection.tsx","App.tsx","reportWebVitals.tsx","index.tsx"],"names":["AdTrackingContext","React","createContext","undefined","useStyles","makeStyles","itemText","fontSize","whiteSpace","overflow","textOverflow","podItem","podItemOnAir","backgroundColor","background","adItem","paddingLeft","theme","spacing","adItemOnAir","trackingUrlItem","paddingTop","paddingBottom","greenIcon","color","redIcon","AdPodList","classes","adTrackingContext","useContext","Error","useState","expandPods","setExpandPods","expandAds","setExpandAds","pods","adPods","playheadInMs","lastPlayheadTime","prftPlayheadInMs","lastPrftPlayheadTime","presentationStartTime","shouldExpandPod","pod","id","playhead","prftStartTime","startTime","duration","shouldExpandAd","ad","getTime","o","Date","toLocaleString","getClass","className","List","map","ListItem","button","onClick","newState","Object","keys","filter","key","find","p","forEach","toggleExpandPod","ListItemIcon","ListItemText","disableTypography","toFixed","Collapse","in","timeout","unmountOnExit","ads","startsWith","toggleExpandAd","trackingEvents","trackingUrl","index","reportingState","event","signalingUrls","ErrorContext","errors","reportError","acknowledgeError","DefaultErrorContextProvider","props","setErrors","Provider","value","message","acknowledged","error","children","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","SessionContext","AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS","mergeAds","existingAds","updated","i","adId","a","splice","length","existingAd","t","push","SimpleAdTracker","lastPlayheadUpdateTime","listeners","this","listener","indexOf","existingPods","podId","existingPod","mergePods","notifyListeners","time","now","speed","iterateTrackingEvents","endTime","sendBeacon","needSendBeacon","handler","time0","time1","podStartTime","adStartTime","Promise","all","url","fetch","response","status","console","AdTrackingPlaybackSessionProvider","EARLY_FETCH_MS","history","useHistory","location","useLocation","urlQueryParam","URLSearchParams","search","get","errorContext","adTrackerRef","setPresentationStartTime","localSessionId","mediaUrl","manifestUrl","adTrackingMetadataUrl","sessionInfo","setSessionInfo","setLastPlayheadTime","setLastPrftPlayheadTime","setAdPods","start","end","lastDataRange","setLastDataRange","rewriteUrlToMetadataUrl","replace","refreshMetadata","useCallback","prft","isInRange","range","dataRange","prftStart","prftEnd","log","json","updatePods","adBreaks","loadMedia","redirect","cache","redirected","includes","getAdPods","addUpdateListener","toISOString","sessionContext","load","encodeURIComponent","unload","updatePlayheadTime","updatePrftPlayheadTime","updatePresentationStartTime","pause","resume","mute","unmute","ShakaPlayer","player","videoRef","containerRef","lastMuted","paused","createRef","window","muxjs","video","container","shaka","Player","configure","muted","ui","Overlay","controlPanelElements","addEventListener","err","onError","getControls","isSeeking","onResume","onPaused","onMute","onUnmute","getPlayheadTimeAsDate","currentTime","getPresentationLatencyInfo","getPresentationStartTimeAsDate","ref","style","maxWidth","width","height","autoPlay","Component","PlayerContainer","shakaRef","localSessionRef","rawCurrentTime","setRawCurrentTime","setPlayhead","prftWallClock","setPrftWallClock","streamFormat","setStreamFormat","timeMsToNextBreak","wallClock","Infinity","Math","min","getRawVideoTime","clockTime","prftClockTime","rawClockTime","getPresentationStartTime","updateTime","ceil","buttons","marginRight","InfoSection","urlInputRef","preventDefault","entries","Snackbar","anchorOrigin","vertical","horizontal","open","elevation","variant","severity","onClose","errorKey","Typography","gutterBottom","TextField","inputRef","label","fullWidth","defaultValue","Box","display","flexDirection","Button","Link","href","underline","createTheme","palette","primary","main","secondary","paper","padding","textAlign","text","App","StyledEngineProvider","injectFirst","ThemeProvider","basename","exact","path","Container","Grid","item","xs","Paper","square","sm","Tabs","indicatorColor","textColor","Tab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","debug","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.afcb8a06.chunk.js","sourcesContent":["import React from 'react';\nimport SimpleAdTrackerInterface from \"../types/SimpleAdTrackerInterface\";\n\nconst AdTrackingContext = React.createContext<SimpleAdTrackerInterface | undefined>(undefined);\n\nexport default AdTrackingContext;\n","import { useContext, useState } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { Collapse, List, ListItem, ListItemText, ListItemIcon } from '@mui/material';\nimport MovieIcon from '@mui/icons-material/Movie';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport HourglassFullIcon from '@mui/icons-material/HourglassFull';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport AdTrackingContext from './AdTrackingContext';\nimport {theme} from \"./App\";\nimport {Ad, AdBreak, TrackingEvent} from \"../types/AdBeacon\";\n\nconst useStyles = makeStyles(() => ({\n  itemText: {\n    fontSize: 13,\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  podItem: {\n  },\n  podItemOnAir: {\n    backgroundColor: \"#42a5f5\",\n    '&:hover': {\n      background: \"#2196f3\",\n    }\n  },\n  adItem: {\n    paddingLeft: theme.spacing(4),\n  },\n  adItemOnAir: {\n    paddingLeft: theme.spacing(4),\n    backgroundColor: \"#90caf9\",\n    '&:hover': {\n      background: \"#64b5f6\",\n    }\n  },\n  trackingUrlItem: {\n    paddingLeft: theme.spacing(8),\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(1)\n  },\n  greenIcon: {\n    color: 'green'\n  },\n  redIcon: {\n    color: 'red'\n  }\n}));\n\nfunction AdPodList() {\n  const classes = useStyles();\n\n  const adTrackingContext = useContext(AdTrackingContext);\n\n  if (adTrackingContext === undefined) {\n    throw new Error('AdTrackingContext is undefined');\n  }\n\n  const [expandPods, setExpandPods] = useState<{[key: string]: boolean}>({});\n\n  const [expandAds, setExpandAds] = useState<{[key: string]: boolean}>({});\n\n  const pods = adTrackingContext.adPods || [];\n\n  const playheadInMs = adTrackingContext.lastPlayheadTime;\n\n  const prftPlayheadInMs = adTrackingContext.lastPrftPlayheadTime;\n\n  const presentationStartTime = adTrackingContext.presentationStartTime;\n\n  const shouldExpandPod = (pod: AdBreak): boolean => {\n    const keepPastPodFor = 2000;\n    if (pod.id in expandPods) {\n      return expandPods[pod.id];\n    } else {\n      const playhead = pod.prftStartTime ? prftPlayheadInMs : playheadInMs;\n      return playhead !== null && playhead < pod.startTime + pod.duration + keepPastPodFor;\n    }\n  }\n\n  const toggleExpandPod = (pod: AdBreak) => {\n    const newState = {\n      ...expandPods,\n      [pod.id]: !shouldExpandPod(pod)\n    };\n    Object.keys(expandPods)\n      .filter(key => !pods.find(p => p.id === key))\n      .forEach(key => delete newState[key]);\n    setExpandPods(newState);\n  }\n\n  const shouldExpandAd = (ad: Ad, pod: AdBreak) => {\n    const keepPastAdFor = 2000;\n    if (pod.id + '/' + ad.id in expandAds) {\n      return expandAds[pod.id + '/' + ad.id];\n    } else {\n      const playhead = pod.prftStartTime ? prftPlayheadInMs : playheadInMs;\n      return playhead !== null && playhead < ad.startTime + ad.duration + keepPastAdFor;\n    }\n  }\n\n  const toggleExpandAd = (ad: Ad, pod: AdBreak) => {\n    const newState = {\n      ...expandAds,\n      [pod.id + '/' + ad.id]: !shouldExpandAd(ad, pod)\n    };\n    Object.keys(expandAds)\n      .filter(key => !pods.find(p => key.startsWith(p.id + '/')))\n      .forEach(key => delete newState[key]);\n    setExpandAds(newState);\n  };\n\n  const getTime = (o: AdBreak | Ad | TrackingEvent) => {\n    return new Date(o.prftStartTime ? o.prftStartTime : o.startTime + presentationStartTime).toLocaleString();\n  }\n  const getClass = (o: AdBreak | Ad | TrackingEvent) => {\n    const playhead = o.prftStartTime ? prftPlayheadInMs : playheadInMs;\n    const startTime = o.prftStartTime || o.startTime;\n    return startTime < playhead && playhead < startTime + o.duration ? classes.podItemOnAir : classes.podItem\n  }\n\n  return (\n    <div className=\"ad-pod-list\">\n      {pods ?\n        <List>\n          {pods.map((pod) =>\n            <div key={pod.id}>\n              <ListItem button onClick={() => toggleExpandPod(pod)} className={getClass(pod)}>\n                <ListItemIcon>\n                  <FolderIcon />\n                </ListItemIcon>\n                <ListItemText disableTypography className={classes.itemText}>\n                  <div>\n                    Ad Pod: {pod.id}\n                  </div>\n                  <div>\n                    Time: {getTime(pod)}, Duration: {(pod.duration / 1000).toFixed(1)}s\n                  </div>\n                </ListItemText>\n                {shouldExpandPod(pod) ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse key={pod.id + \".ads\"} in={shouldExpandPod(pod)} timeout=\"auto\" unmountOnExit>\n                <List>\n                  {pod.ads.map((ad) =>\n                    <div key={ad.id}>\n                      <ListItem button onClick={() => toggleExpandAd(ad, pod)} className={getClass(ad)}>\n                        <ListItemIcon>\n                          <MovieIcon />\n                        </ListItemIcon>\n                        <ListItemText disableTypography className={classes.itemText}>\n                          <div>\n                            Ad: {ad.id}\n                          </div>\n                          <div>\n                            Time: {getTime(ad)}, Duration: {(ad.duration / 1000).toFixed(1)}s\n                          </div>\n                        </ListItemText>\n                        {shouldExpandAd(ad, pod) ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse key={ad.id + \".trackingUrls\"} in={shouldExpandAd(ad, pod)} timeout=\"auto\" unmountOnExit>\n                        <List>\n                          {ad.trackingEvents ?\n                            ad.trackingEvents.map((trackingUrl,index) =>\n                              <ListItem key={index} className={classes.trackingUrlItem}>\n                                <ListItemIcon>\n                                  {trackingUrl.reportingState === \"IDLE\" ? <RadioButtonUncheckedIcon /> : null}\n                                  {trackingUrl.reportingState === \"REPORTING\" ? <HourglassFullIcon /> : null}\n                                  {trackingUrl.reportingState === \"DONE\" ? <CheckCircleIcon className={classes.greenIcon} /> : null}\n                                  {trackingUrl.reportingState === \"ERROR\" ? <ErrorIcon className={classes.redIcon} /> : null}\n                                </ListItemIcon>\n                                <ListItemText disableTypography className={classes.itemText}>\n                                  <div>\n                                    Event: {trackingUrl.event}\n                                  </div>\n                                  <div>\n                                    URL: {trackingUrl.signalingUrls}\n                                  </div>\n                                  {trackingUrl.startTime ?\n                                    <div>\n                                      Time: {getTime(trackingUrl)}\n                                    </div>\n                                    : null}\n                                </ListItemText>\n                              </ListItem>\n                            )\n                            : null\n                          }\n                        </List>\n                      </Collapse>\n                    </div>\n                  )}\n                </List>\n              </Collapse>\n            </div>\n          )}\n        </List>\n        : null\n      }\n    </div>\n  );\n}\n\nexport default AdPodList;\n","import React, { useState } from 'react';\nimport ErrorContextInterface, {Errors} from \"../types/ErrorContextInterface\";\n\nconst ErrorContext = React.createContext<ErrorContextInterface>({\n    errors: {},\n    reportError: () => {},\n    acknowledgeError: () => {}\n});\n\nfunction DefaultErrorContextProvider(props: any) {\n    const [errors, setErrors] = useState<Errors>({});\n\n    const reportError = (key: string, message: string) => {\n        setErrors({\n            ...errors,\n            [key]: {\n                message: message,\n                acknowledged: false\n            }\n        });\n    }\n\n    const acknowledgeError = (key: string) => {\n        const error = errors[key];\n        if (error) {\n            setErrors({\n                ...errors,\n                [key]: {\n                    ...error,\n                    acknowledged: true\n                }\n            });\n        }\n    }\n\n    return (\n        <ErrorContext.Provider value={{errors, reportError, acknowledgeError}}>\n            {props.children}\n        </ErrorContext.Provider>\n    );\n}\n\nexport { ErrorContext, DefaultErrorContextProvider } ;\n","// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from 'react';\n\nfunction useInterval(callback: () => void, delay?: number) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      if (!savedCallback.current) return;\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","import React from 'react';\nimport SessionContextInterface from \"../types/SessionContextInterface\";\n\nconst SessionContext = React.createContext<SessionContextInterface | undefined>(undefined);\n\nexport default SessionContext;\n","import SimpleAdTrackerInterface from \"../types/SimpleAdTrackerInterface\";\nimport {Ad, AdBreak, TrackingEvent} from \"../types/AdBeacon\";\n\nconst AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS = 500;\nconst MAX_TOLERANCE_IN_SPEED = 2;\n// Allow event to be emitted <tolerance> ms after its start time\n// Used for events that have zero duration & PRFT source switching\nconst MAX_TOLERANCE_EVENT_END_TIME_MS = 1000;\n\nconst mergePods = (existingPods: AdBreak[], pods: AdBreak[]) => {\n    let updated = false;\n\n    for (let i = existingPods.length - 1; i >= 0; i--) {\n        const podId = existingPods[i].id;\n        if (!pods.find(p => p.id === podId)) {\n            existingPods.splice(i, 1);\n            updated = true;\n        }\n    }\n    pods.forEach((pod) => {\n        let existingPod = existingPods.find(p => p.id === pod.id);\n        if (!existingPod) {\n            existingPod = {\n                id: pod.id,\n                prftStartTime: pod.prftStartTime, // add for display purposes\n                startTime: pod.prftStartTime || pod.startTime,\n                duration: pod.duration,\n                ads: []\n            };\n            existingPods.push(existingPod);\n            updated = true;\n        } else if (existingPod.duration !== pod.duration) {\n            existingPod.duration = pod.duration;\n            updated = true;\n        }\n        updated = mergeAds(existingPod.ads, pod.ads) || updated;\n    });\n\n    return updated;\n}\n\nconst mergeAds = (existingAds: Ad[], ads: Ad[]) => {\n    let updated = false;\n\n    for (let i = existingAds.length - 1; i >= 0; i--) {\n        const adId = existingAds[i].id;\n        if (!ads.find(a => a.id === adId)) {\n            existingAds.splice(i, 1);\n            updated = true;\n        }\n    }\n    ads.forEach((ad) => {\n        let existingAd = existingAds.find(a => a.id === ad.id);\n        if (!existingAd) {\n            existingAd = {\n                id: ad.id,\n                prftStartTime: ad.prftStartTime, // add for display purposes\n                startTime: ad.prftStartTime || ad.startTime,\n                duration: ad.duration,\n                trackingEvents: ad.trackingEvents.map(t => ({\n                    event: t.event,\n                    prftStartTime: t.prftStartTime, // add for display purposes\n                    startTime: t.prftStartTime || t.startTime,\n                    duration: t.duration,\n                    signalingUrls: t.signalingUrls,\n                    reportingState: \"IDLE\"\n                }))\n            };\n            existingAds.push(existingAd);\n            updated = true;\n        } else if (existingAd.duration !== ad.duration) {\n            existingAd.duration = ad.duration;\n            updated = true;\n        }\n    });\n\n    return updated;\n}\n\nexport default class SimpleAdTracker implements SimpleAdTrackerInterface {\n    adPods: AdBreak[];\n    lastPlayheadTime: number;\n    lastPrftPlayheadTime: number;\n    presentationStartTime: number;\n\n    private lastPlayheadUpdateTime: number;\n    private listeners: (() => void)[];\n\n    constructor() {\n        this.adPods = [];\n        this.lastPlayheadTime = 0;\n        this.presentationStartTime = 0;\n        this.lastPrftPlayheadTime = 0;\n        this.lastPlayheadUpdateTime = 0;\n        this.listeners = [];\n    }\n\n    addUpdateListener(listener: () => void) {\n        this.listeners.push(listener);\n    }\n\n    removeUpdateListener(listener: () => void) {\n        const index = this.listeners.indexOf(listener);\n        if (index !== -1) {\n            this.listeners.splice(index, 1);\n        }\n    }\n\n    updatePods(pods: AdBreak[]) {\n        const updated = mergePods(this.adPods, pods);\n        if (updated) {\n            this.notifyListeners();\n        }\n    }\n\n    needSendBeacon(time: number) {\n        const now = new Date().getTime();\n        if (this.lastPlayheadUpdateTime) {\n            if (now === this.lastPlayheadUpdateTime) {\n                return;\n            }\n\n            const speed = (time - this.lastPlayheadTime) / (now - this.lastPlayheadUpdateTime);\n            if (speed > 0 && speed <= MAX_TOLERANCE_IN_SPEED) {\n                this.iterateTrackingEvents((trackingUrl) => {\n                    const startTime = trackingUrl.startTime;\n                    const endTime = startTime + (trackingUrl.duration || MAX_TOLERANCE_EVENT_END_TIME_MS);\n                    if (trackingUrl.reportingState === \"IDLE\" &&\n                        startTime <= time && time <= endTime\n                    ) {\n                        this.sendBeacon(trackingUrl);\n                    }\n                }, this.lastPlayheadTime, time);\n            }\n        }\n        this.lastPlayheadTime = time;\n        this.lastPlayheadUpdateTime = now;\n    }\n\n    updatePlayheadTime(time: number) {\n        this.needSendBeacon(time);\n    }\n\n    updatePrftPlayheadTime(time: number): void {\n        this.needSendBeacon(time);\n    }\n\n    updateRawPlayheadTime(time: number): void {\n        this.needSendBeacon(time);\n    }\n\n    updatePresentationStartTime(time: number): void {\n        this.presentationStartTime = time;\n    }\n\n    getAdPods() {\n        return this.adPods;\n    }\n\n    pause() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"pause\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    resume() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"resume\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    mute() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"mute\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    unmute() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"unmute\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    // private\n\n    notifyListeners() {\n        this.listeners.forEach((listener) => {\n            listener();\n        });\n    };\n\n    iterateTrackingEvents(handler: (a: TrackingEvent, b: Ad, c: AdBreak) => void, time0 = this.lastPlayheadTime, time1 = this.lastPlayheadTime) {\n        this.adPods.forEach((pod) => {\n            const podStartTime = pod.startTime;\n            if (podStartTime <= time1 && time0 <= podStartTime + pod.duration + AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS) {\n                pod.ads.forEach((ad) => {\n                    const adStartTime = ad.startTime;\n                    if (adStartTime <= time1 && time0 <= adStartTime + ad.duration + AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS) {\n                        ad.trackingEvents.forEach((trackingUrl) => {\n                            handler(trackingUrl, ad, pod);\n                        });\n                    }\n                });\n            }\n        });\n    }\n\n    async sendBeacon(trackingUrl: TrackingEvent) {\n        trackingUrl.reportingState = \"REPORTING\";\n        this.notifyListeners();\n\n        try {\n            await Promise.all(trackingUrl.signalingUrls.map(async url => {\n                const response = await fetch(url);\n                if (response.status < 200 && response.status > 299) {\n                    console.error(`Failed to send beacon to ${url}; Status ${response.status}`);\n                    throw new Error(`Failed to send beacon to ${url}; Status ${response.status}`);\n                }\n            }))\n            trackingUrl.reportingState = \"DONE\"\n        } catch (err) {\n            trackingUrl.reportingState = \"ERROR\";\n        }\n        this.notifyListeners();\n    };\n}\n","import {useState, useEffect, useRef, useContext, useCallback} from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport useInterval from './useInterval';\nimport { ErrorContext } from './ErrorContext';\nimport AdTrackingContext from './AdTrackingContext';\nimport SessionContext from './SessionContext';\nimport SimpleAdTracker from './SimpleAdTracker';\nimport SimpleAdTrackerInterface from \"../types/SimpleAdTrackerInterface\";\nimport SessionContextInterface from \"../types/SessionContextInterface\";\nimport AdBeacon, {DataRange} from \"../types/AdBeacon\";\nimport ErrorContextInterface from \"../types/ErrorContextInterface\";\n\nconst AdTrackingPlaybackSessionProvider = (props: any) => {\n    const AD_TRACING_METADATA_FILE_NAME = \"metadata\";\n\n    // Fetch the next metadata n ms early. Used in isInRange().\n    const EARLY_FETCH_MS = 5000;\n\n    const history = useHistory();\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const urlQueryParam = searchParams.get(\"url\");\n\n    const errorContext = useContext<ErrorContextInterface>(ErrorContext);\n\n    const adTrackerRef = useRef<SimpleAdTracker>();\n    const [presentationStartTime, setPresentationStartTime] = useState(0);\n\n    const [sessionInfo, setSessionInfo] = useState({\n        localSessionId: \"\",\n        mediaUrl: urlQueryParam,\n        manifestUrl: null,\n        adTrackingMetadataUrl: \"\",\n    });\n    const [lastPlayheadTime, setLastPlayheadTime] = useState(0);\n    const [lastPrftPlayheadTime, setLastPrftPlayheadTime] = useState(0);\n    const [adPods, setAdPods] = useState<any>([]);\n    const [lastDataRange, setLastDataRange] = useState<DataRange>({\n        start: 0,\n        end: 0,\n    });\n\n    const rewriteUrlToMetadataUrl = (url: string) => {\n        return url.replace(/\\/[^/?]+(\\??[^/]*)$/, '/' + AD_TRACING_METADATA_FILE_NAME + '$1');\n    }\n\n    const refreshMetadata = useCallback(async (url: string, time = 0, prft = false): Promise<boolean> => {\n        const isInRange = (time: number, prft: boolean, range?: DataRange) => {\n            // Bypass checking only if time === 0, not null | undefined\n            // Happens on initial load.\n            if (time === 0) return true;\n            const dataRange = range || lastDataRange;\n            if (prft && dataRange.prftStart && dataRange.prftEnd) {\n                return time >= dataRange.prftStart && time <= dataRange.prftEnd - EARLY_FETCH_MS;\n            } else {\n                return time >= dataRange.start && time <= dataRange.end - EARLY_FETCH_MS;\n            }\n        }\n\n        console.log(`refreshMetadata: ${url}`);\n        if (url) {\n            try {\n                const response = await fetch(url);\n                if (response.status < 200 || response.status > 299) {\n                    throw new Error(`Get unexpected response code ${response.status}`);\n                }\n                const json: AdBeacon = await response.json();\n                setLastDataRange(json.dataRange);\n\n                if (!isInRange(time, prft, json.dataRange)) {\n                    console.log(`Invalid metadata: Not in range. Time: ${time}, PRFT: ${prft}`, json.dataRange);\n                    return false;\n                }\n\n                if (adTrackerRef.current !== undefined) {\n                    adTrackerRef.current.updatePods(json.adBreaks || []);\n                    return true;\n                }\n            } catch (err) {\n                console.error(\"Failed to download metadata for ad tracking\", err);\n                errorContext.reportError(\"metadata.request.failed\", \"Failed to download metadata for ad tracking: \" + err);\n            }\n        }\n        return false;\n    }, [errorContext, lastDataRange]);\n\n    const loadMedia = useCallback(async (url) => {\n        let manifestUrl, adTrackingMetadataUrl;\n        try {\n            const response = await fetch(url, { redirect: 'follow', cache: 'reload' });\n            if (response.status < 200 || response.status > 299) {\n                throw new Error(`Get unexpected response code ${response.status}`);\n            }\n\n            if (response.redirected) {\n                manifestUrl = response.url;\n                adTrackingMetadataUrl = rewriteUrlToMetadataUrl(response.url);\n            } else {\n                manifestUrl = url;\n                adTrackingMetadataUrl = rewriteUrlToMetadataUrl(url);\n            }\n        } catch (err) {\n            errorContext.reportError(\"manifest.request.failed\", \"Failed to download manifest: \" + err);\n            return;\n        }\n\n        // workaround HLS issue that video stream needs to get first otherwise there is error \"Manipulated manifest does not contain any segments\"\n        if (manifestUrl.includes('index.m3u8')) {\n            await fetch(manifestUrl.replace(\"index.m3u8\", \"01.m3u8\"));\n        }\n\n        setAdPods([]);\n        adTrackerRef.current = new SimpleAdTracker();\n        const pods = adTrackerRef.current.getAdPods();\n        adTrackerRef.current.addUpdateListener(() => {\n            setAdPods([...pods]);  // trigger re-render\n        });\n\n        setSessionInfo({\n            localSessionId: new Date().toISOString(),\n            mediaUrl: url,\n            manifestUrl: manifestUrl,\n            adTrackingMetadataUrl: adTrackingMetadataUrl\n        });\n\n        await refreshMetadata(adTrackingMetadataUrl);\n    }, [refreshMetadata, errorContext]);\n\n    const unload = () => {\n        setAdPods([]);\n        adTrackerRef.current = new SimpleAdTracker();\n        const pods = adTrackerRef.current.getAdPods();\n        adTrackerRef.current.addUpdateListener(() => {\n            setAdPods([...pods]);  // trigger re-render\n        });\n\n        setPresentationStartTime(0);\n\n        setSessionInfo({\n            localSessionId: \"\",\n            mediaUrl: null,\n            manifestUrl: null,\n            adTrackingMetadataUrl: \"\"\n        });\n    }\n\n    useEffect(() => {\n        if (sessionInfo.mediaUrl && !sessionInfo.localSessionId) {\n            loadMedia(sessionInfo.mediaUrl);\n        }\n    }, [loadMedia, sessionInfo]);\n\n    useInterval(async () => {\n        const isInRange = (time: number, prft: boolean) => {\n            if (prft && lastDataRange.prftStart && lastDataRange.prftEnd) {\n                return time >= lastDataRange.prftStart && time <= lastDataRange.prftEnd - EARLY_FETCH_MS;\n            } else {\n                return time >= lastDataRange.start && time <= lastDataRange.end - EARLY_FETCH_MS;\n            }\n        }\n\n        console.log(`PRFT: ${lastPrftPlayheadTime}; In range: ${isInRange(lastPrftPlayheadTime, true)}`);\n        console.log(`Raw: ${lastPlayheadTime}; In range: ${isInRange((lastPlayheadTime), false)}`);\n\n        let url = sessionInfo.adTrackingMetadataUrl;\n        if (!url) return;\n\n        if (lastDataRange.prftStart && lastDataRange.prftEnd && lastPrftPlayheadTime > 0) {\n            if (!isInRange(lastPrftPlayheadTime, true) &&\n                !(await refreshMetadata(url, lastPrftPlayheadTime, true))) {\n                    url = `${url}&prftStart=${lastPrftPlayheadTime}`;\n                    refreshMetadata(url);\n            }\n        } else if (lastPlayheadTime &&\n            !isInRange((lastPlayheadTime), false) &&\n            !(await refreshMetadata(url, lastPlayheadTime, false))) {\n            url = `${url}&start=${lastPlayheadTime}`;\n            refreshMetadata(url);\n        }\n    }, 4000);\n\n    const sessionContext: SessionContextInterface = {\n        sessionInfo: sessionInfo,\n        presentationStartTime: presentationStartTime,\n        load: (url) => {\n            history.replace(\"?url=\" + encodeURIComponent(url));\n            return loadMedia(url);\n        },\n        unload: unload\n    };\n\n    const adTrackingContext: SimpleAdTrackerInterface = {\n        adPods: adPods,\n        lastPlayheadTime,\n        lastPrftPlayheadTime,\n        presentationStartTime,\n        updatePlayheadTime: (time) => {\n            setLastPlayheadTime(time);\n        },\n        updatePrftPlayheadTime: (time) => {\n            setLastPrftPlayheadTime(time);\n        },\n        updatePresentationStartTime: (time) => {\n            setPresentationStartTime(time);\n        },\n        needSendBeacon: (time) => adTrackerRef.current?.needSendBeacon(time),\n        pause: () => adTrackerRef.current?.pause(),\n        resume: () => adTrackerRef.current?.resume(),\n        mute: () => adTrackerRef.current?.mute(),\n        unmute: () => adTrackerRef.current?.unmute()\n    };\n\n    return (\n        <SessionContext.Provider value={sessionContext}>\n            <AdTrackingContext.Provider value={adTrackingContext}>\n                {props.children}\n            </AdTrackingContext.Provider>\n        </SessionContext.Provider>\n    );\n};\n\nexport default AdTrackingPlaybackSessionProvider;\n","import React, {Component, createRef} from \"react\";\nimport \"@harmonicinc/shaka-player/dist/controls.css\";\nimport muxjs from 'mux.js';\n\nimport \"@harmonicinc/shaka-player/dist/shaka-player.ui\";\n// @ts-ignore\nimport shaka from \"@harmonicinc/shaka-player/dist/shaka-player.ui\";\nimport ShakaPlayerInterface from \"../types/ShakaPlayerInterface\";\nimport ShakaPlayerProps from \"../types/ShakaPlayerProps\";\n\nclass ShakaPlayer extends Component<ShakaPlayerProps> implements ShakaPlayerInterface {\n  player: shaka.Player | null;\n\n  private readonly videoRef: React.RefObject<HTMLVideoElement>;\n  private readonly containerRef: React.RefObject<HTMLDivElement>;\n  private lastMuted: boolean;\n  private paused: boolean;\n\n  constructor(props: ShakaPlayerProps) {\n    super(props);\n    this.videoRef = createRef();\n    this.containerRef = createRef();\n    this.player = null;\n    this.lastMuted = false;\n    this.paused = false;\n  }\n\n\n  componentDidMount() {\n    window.muxjs = muxjs;\n\n    const video = this.videoRef.current;\n    const container = this.containerRef.current;\n\n    if (!video || !container) return;\n\n    this.player = new shaka.Player(video);\n    this.player.configure('manifest.defaultPresentationDelay', 12.0 /* seconds */);\n    this.player.configure('manifest.dash.ignoreSuggestedPresentationDelay', true);\n    this.lastMuted = video.muted;\n\n    if (!this.player) return;\n\n    const ui = new shaka.ui.Overlay(this.player, container, video);\n    ui.configure({\n      controlPanelElements: [\n        \"play_pause\",\n        \"mute\",\n        \"volume\",\n        \"fullscreen\",\n        \"overflow_menu\"\n      ]\n    });\n\n    video.addEventListener('error', (err) => this.props.onError?.(err));\n    video.addEventListener('playing', () => {\n      if (!ui.getControls()?.isSeeking()) {\n        if (this.paused) {\n          this.props.onResume?.();\n          this.paused = false;\n        }\n      }\n    });\n    video.addEventListener('pause', () => {\n      if (!ui.getControls()?.isSeeking()) {\n        this.props.onPaused?.();\n        this.paused = true;\n      }\n    });\n    video.addEventListener('volumechange', () => {\n      if (video.muted && !this.lastMuted) {\n        this.props.onMute?.();\n      } else if (!video.muted && this.lastMuted) {\n        this.props.onUnmute?.();\n      }\n      this.lastMuted = video.muted;\n    });\n  }\n\n  load(url: string) {\n    this.player?.load(url);\n    this.paused = false;\n  }\n\n  unload() {\n    this.player?.unload();\n    this.paused = false;\n  }\n\n  getPlayheadTimeAsDate() {\n    return this.player?.getPlayheadTimeAsDate() || null;\n  }\n\n  getRawVideoTime() {\n    return this.videoRef.current?.currentTime || null;\n  }\n\n  getPresentationLatencyInfo(): {type: string, latency: number, wallClock: Date} {\n    return this.player?.getPresentationLatencyInfo() || null;\n  }\n\n  getPresentationStartTime(): Date {\n    return this.player?.getPresentationStartTimeAsDate()\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.containerRef}\n        style={{ maxWidth: this.props.width }}>\n        <video\n            data-shaka-player\n            ref={this.videoRef}\n            style={{ width: \"100%\", height: \"100%\", backgroundColor: \"black\" }}\n            autoPlay={true}>\n        </video>\n      </div>\n    );\n  }\n}\n\nexport default ShakaPlayer;\n","import { useContext, useEffect, useRef, useState } from 'react';\nimport ShakaPlayer from './ShakaPlayer';\nimport SessionContext from './SessionContext';\nimport AdTrackingContext from './AdTrackingContext';\nimport useInterval from './useInterval';\nimport SessionContextInterface from \"../types/SessionContextInterface\";\nimport SimpleAdTrackerInterface from \"../types/SimpleAdTrackerInterface\";\n\nfunction PlayerContainer() {\n    const sessionContext = useContext<SessionContextInterface | undefined>(SessionContext);\n\n    if (sessionContext === undefined) {\n        throw new Error('SessionContext is undefined');\n    }\n\n    const sessionInfo = sessionContext.sessionInfo;\n\n    const adTrackingContext = useContext<SimpleAdTrackerInterface | undefined>(AdTrackingContext);\n\n    if (adTrackingContext === undefined) {\n        throw new Error('SessionContext is undefined');\n    }\n\n    const shakaRef = useRef<ShakaPlayer>(null);\n\n    const localSessionRef = useRef<any>();\n\n    const [rawCurrentTime, setRawCurrentTime] = useState(0);\n    const [playhead, setPlayhead] = useState(0);\n    const [prftWallClock, setPrftWallClock] = useState(0);\n    const [streamFormat, setStreamFormat] = useState<string | null>(null);\n\n    const updateTime = (time: number) => {\n        setRawCurrentTime(time);\n\n        if (sessionInfo.manifestUrl?.includes(\".m3u8\")) {\n            const clockTime = shakaRef.current?.getPlayheadTimeAsDate()?.getTime() || 0;\n            adTrackingContext.updatePlayheadTime(clockTime);\n            adTrackingContext.needSendBeacon(clockTime);\n            setPlayhead(clockTime);\n            setStreamFormat('HLS');\n        } else if (sessionInfo.manifestUrl?.includes(\".mpd\")) {\n            const prftClockTime = shakaRef.current?.getPresentationLatencyInfo()?.wallClock.getTime() || 0;\n            const rawClockTime = time * 1000;\n            const presentationStartTime = shakaRef.current?.getPresentationStartTime()?.getTime() || 0;\n            const clockTime = rawClockTime + presentationStartTime;\n            adTrackingContext.updatePrftPlayheadTime(prftClockTime);\n            adTrackingContext.updatePlayheadTime(rawClockTime);\n            adTrackingContext.updatePresentationStartTime(presentationStartTime);\n            adTrackingContext.needSendBeacon(prftClockTime > 0 ? prftClockTime : rawClockTime);\n            setPrftWallClock(prftClockTime);\n            setPlayhead(clockTime);\n            setStreamFormat('DASH');\n        }\n    };\n\n    const onError = (error: ErrorEvent) => {\n      console.error(\"Error from player\", error);\n    }\n\n    const timeMsToNextBreak = () => {\n        let wallClock = 0;\n        if (streamFormat === 'HLS') {\n            wallClock = playhead;\n        } else if (streamFormat === 'DASH') {\n            wallClock = prftWallClock || (rawCurrentTime * 1000);\n        } else {\n            return Infinity;\n        }\n        return Math.min(Infinity, ...adTrackingContext.adPods\n            .filter(p => p.startTime > wallClock)\n            .map(p => p.startTime))\n            - wallClock;\n    }\n\n    useInterval(() => {\n        const time = shakaRef.current?.getRawVideoTime();\n        if (time) updateTime(time);\n    }, 500);\n\n    useEffect(() => {\n        if (shakaRef.current && localSessionRef.current !== sessionInfo.localSessionId) {\n            if (sessionInfo.manifestUrl) {\n                shakaRef.current.load(sessionInfo.manifestUrl);\n            } else {\n                shakaRef.current.unload();\n            }\n            localSessionRef.current = sessionInfo.localSessionId\n        }\n    }, [shakaRef, sessionInfo]);\n\n    return (\n        <div>\n            <ShakaPlayer ref={shakaRef}\n                onPaused={() => {\n                    console.log('playback paused');\n                    adTrackingContext.pause();\n                }}\n                onResume={() =>{\n                    console.log('playback resumed from pause');\n                    adTrackingContext.resume()\n                }}\n                onMute={() => {\n                    console.log('player muted');\n                    adTrackingContext.mute();\n                }}\n                onUnmute={() => {\n                    console.log('player unmute');\n                    adTrackingContext.unmute();\n                }}\n                onError={onError}/>\n            <div>\n                Raw currentTime from video element: {rawCurrentTime ? rawCurrentTime.toFixed(0) : 0}s\n            </div>\n            <div>\n                Playhead date time: {playhead ? new Date(playhead).toLocaleString() : '-'}\n            </div>\n            <div>\n                PRFT Wall Clock: {prftWallClock ? new Date(prftWallClock).toLocaleString() : '-'}\n            </div>\n            <div>\n                Time to next ad break: {timeMsToNextBreak() !== Infinity ? Math.ceil(timeMsToNextBreak() /1000).toFixed(0) + 's' : '-'}\n            </div>\n        </div>\n    );\n}\n\nexport default PlayerContainer;\n","import React, { useContext, useRef, MouseEvent } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { Box, Button, Link, Snackbar, TextField, Typography } from '@mui/material';\nimport MuiAlert from '@mui/material/Alert';\nimport { ErrorContext } from './ErrorContext';\nimport SessionContext from './SessionContext';\nimport {theme} from \"./App\";\n\nconst useStyles = makeStyles(() => ({\n  buttons: {\n    '& > *': {\n      marginRight: theme.spacing(1),\n    },\n  }\n}));\n\nfunction InfoSection() {\n  const classes = useStyles();\n\n  const errorContext = useContext(ErrorContext);\n\n  const sessionContext = useContext(SessionContext);\n\n  if (sessionContext === undefined) {\n    throw new Error('SessionContext is undefined');\n  }\n\n  const sessionInfo = sessionContext.sessionInfo;\n\n  const urlInputRef = useRef<any>();\n\n  const preventDefault = (event: MouseEvent<HTMLAnchorElement | HTMLSpanElement>) => event.preventDefault();\n\n  const load = async () => {\n    await sessionContext.load(urlInputRef.current.value);\n  }\n\n  const unload = () => {\n    sessionContext.unload();\n  }\n\n  const closeAlert = (errorKey: string) => {\n    errorContext.acknowledgeError(errorKey);\n  }\n\n  return (\n    <div>\n      {\n        Object.entries(errorContext.errors).map(([key, error], i) => (\n          <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} open={!error.acknowledged} key={i}>\n            <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={() => closeAlert(key)}>\n              {error.message}\n            </MuiAlert>\n          </Snackbar>\n        ))\n      }\n\n      <Typography variant=\"h5\" gutterBottom>\n        Harmonic Client Side Ad Tracking Demo\n      </Typography>\n      <TextField inputRef={urlInputRef} label=\"Media URL\" fullWidth={true} defaultValue={sessionInfo.mediaUrl || ''} variant={'standard'} />\n      <Box className={classes.buttons} width={1} paddingTop={2} display=\"flex\" flexDirection=\"row\">\n        <Button variant=\"contained\" color=\"primary\" onClick={load}>\n          Load\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={unload}>\n          Unload\n        </Button>\n      </Box>\n      <Box width={1} paddingTop={2} display=\"flex\" flexDirection=\"row\">\n        <Link href=\"#\" color=\"inherit\" onClick={preventDefault} underline=\"hover\">\n          {sessionInfo.manifestUrl ? sessionInfo.manifestUrl : ''}\n        </Link>\n      </Box>\n      <Box width={1} paddingTop={1} display=\"flex\" flexDirection=\"row\">\n        <Link href=\"#\" color=\"inherit\" onClick={preventDefault} underline=\"hover\">\n          {sessionInfo.adTrackingMetadataUrl ? sessionInfo.adTrackingMetadataUrl : ''}\n        </Link>\n      </Box>\n    </div>\n  );\n}\n\nexport default InfoSection;\n","import './App.css'\nimport { createTheme, ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Container from '@mui/material/Container'\nimport Grid from '@mui/material/Grid'\nimport Paper from '@mui/material/Paper'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport AdPodList from './AdPodList'\nimport { DefaultErrorContextProvider } from './ErrorContext'\nimport AdTrackingPlaybackSessionProvider\n  from './AdTrackingPlaybackSessionProvider'\nimport PlayerContainer from './PlayerContainer'\nimport InfoSection from './InfoSection'\nimport { Route, BrowserRouter } from 'react-router-dom'\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: '#3f51b5',\n    },\n    secondary: {\n      main: '#e0e0e0',\n    },\n  },\n})\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}))\n\nfunction App () {\n  const classes = useStyles()\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter basename=\"/client-side-ad-tracking-demo\">\n          <Route exact path=\"/\">\n            <DefaultErrorContextProvider>\n              <AdTrackingPlaybackSessionProvider>\n                <Container>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                      <Paper square className={classes.paper}>\n                        <InfoSection/>\n                      </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <Paper square className={classes.paper}>\n                        <PlayerContainer/>\n                      </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <Paper square className={classes.paper}>\n                        <Tabs\n                          value={0}\n                          indicatorColor=\"primary\"\n                          textColor=\"primary\">\n                          <Tab label=\"Tracking Events\"/>\n                        </Tabs>\n                        <AdPodList/>\n                      </Paper>\n                    </Grid>\n                  </Grid>\n                </Container>\n              </AdTrackingPlaybackSessionProvider>\n            </DefaultErrorContextProvider>\n          </Route>\n        </BrowserRouter>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nif (process.env.NODE_ENV === 'production') {\n    console.log = () => {}\n    console.debug = () => {}\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}