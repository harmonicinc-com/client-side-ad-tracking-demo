{"version":3,"sources":["AdTrackingContext.tsx","AdPodList.tsx","ErrorContext.tsx","useInterval.tsx","SessionContext.tsx","SimpleAdTracker.tsx","AdTrackingPlaybackSessionProvider.tsx","ShakaPlayer.tsx","PlayerContainer.tsx","InfoSection.tsx","App.tsx","reportWebVitals.tsx","index.tsx"],"names":["AdTrackingContext","React","createContext","undefined","useStyles","makeStyles","itemText","fontSize","whiteSpace","overflow","textOverflow","podItem","podItemOnAir","backgroundColor","background","adItem","paddingLeft","theme","spacing","adItemOnAir","trackingUrlItem","paddingTop","paddingBottom","greenIcon","color","redIcon","AdPodList","classes","adTrackingContext","useContext","Error","useState","expandPods","setExpandPods","expandAds","setExpandAds","pods","adPods","playheadInMs","lastPlayheadTime","shouldExpandPod","pod","id","startTime","duration","shouldExpandAd","ad","className","List","map","ListItem","button","onClick","newState","Object","keys","filter","key","find","p","forEach","toggleExpandPod","ListItemIcon","ListItemText","disableTypography","Date","toLocaleString","toFixed","Collapse","in","timeout","unmountOnExit","ads","startsWith","toggleExpandAd","trackingEvents","trackingUrl","index","reportingState","event","signalingUrls","ErrorContext","errors","reportError","acknowledgeError","DefaultErrorContextProvider","props","setErrors","Provider","value","message","acknowledged","error","children","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","SessionContext","AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS","mergeAds","existingAds","updated","i","adId","a","splice","length","existingAd","prftStartTime","t","push","SimpleAdTracker","lastPlayheadUpdateTime","listeners","this","listener","indexOf","existingPods","podId","existingPod","mergePods","notifyListeners","time","prft","now","getTime","speed","iterateTrackingEvents","sendBeacon","needSendBeacon","handler","time0","time1","podStartTime","adStartTime","url","fetch","response","status","console","AdTrackingPlaybackSessionProvider","EARLY_FETCH_MS","history","useHistory","location","useLocation","urlQueryParam","URLSearchParams","search","get","errorContext","adTrackerRef","presentationStartTime","setPresentationStartTime","localSessionId","mediaUrl","manifestUrl","adTrackingMetadataUrl","sessionInfo","setSessionInfo","setLastPlayheadTime","lastRawPlayheadTime","setLastRawPlayheadTime","lastPrftPlayheadTime","setLastPrftPlayheadTime","setAdPods","start","end","lastDataRange","setLastDataRange","rewriteUrlToMetadataUrl","replace","refreshMetadata","useCallback","isInRange","range","dataRange","prftStart","prftEnd","log","json","updatePods","adBreaks","loadMedia","redirect","cache","redirected","includes","getAdPods","addUpdateListener","toISOString","sessionContext","load","encodeURIComponent","unload","updatePlayheadTime","updatePrftPlayheadTime","updateRawPlayheadTime","pause","resume","mute","unmute","ShakaPlayer","player","videoRef","containerRef","lastMuted","paused","createRef","window","muxjs","video","container","shaka","Player","configure","muted","ui","Overlay","controlPanelElements","addEventListener","err","onError","getControls","isSeeking","onResume","onPaused","onMute","onUnmute","getPlayheadTimeAsDate","currentTime","getPresentationLatencyInfo","ref","style","maxWidth","width","height","autoPlay","Component","PlayerContainer","shakaRef","localSessionRef","rawCurrentTime","setRawCurrentTime","playhead","setPlayhead","timeToNextBreak","Math","min","Infinity","getRawVideoTime","clockTime","prftClockTime","wallClock","updateTime","ceil","buttons","marginRight","InfoSection","urlInputRef","preventDefault","entries","Snackbar","anchorOrigin","vertical","horizontal","open","elevation","variant","severity","onClose","errorKey","Typography","gutterBottom","TextField","inputRef","label","fullWidth","defaultValue","Box","display","flexDirection","Button","Link","href","underline","createTheme","palette","primary","main","secondary","paper","padding","textAlign","text","App","StyledEngineProvider","injectFirst","ThemeProvider","basename","exact","path","Container","Grid","item","xs","Paper","square","sm","Tabs","indicatorColor","textColor","Tab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","debug","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.1b0170b7.chunk.js","sourcesContent":["import React from 'react';\nimport SimpleAdTrackerInterface from \"../types/SimpleAdTrackerInterface\";\n\nconst AdTrackingContext = React.createContext<SimpleAdTrackerInterface | undefined>(undefined);\n\nexport default AdTrackingContext;\n","import { useContext, useState } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { Collapse, List, ListItem, ListItemText, ListItemIcon } from '@mui/material';\nimport MovieIcon from '@mui/icons-material/Movie';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport HourglassFullIcon from '@mui/icons-material/HourglassFull';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport AdTrackingContext from './AdTrackingContext';\nimport {theme} from \"./App\";\nimport {Ad, AdBreak} from \"../types/AdBeacon\";\n\nconst useStyles = makeStyles(() => ({\n  itemText: {\n    fontSize: 13,\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  podItem: {\n  },\n  podItemOnAir: {\n    backgroundColor: \"#42a5f5\",\n    '&:hover': {\n      background: \"#2196f3\",\n    }\n  },\n  adItem: {\n    paddingLeft: theme.spacing(4),\n  },\n  adItemOnAir: {\n    paddingLeft: theme.spacing(4),\n    backgroundColor: \"#90caf9\",\n    '&:hover': {\n      background: \"#64b5f6\",\n    }\n  },\n  trackingUrlItem: {\n    paddingLeft: theme.spacing(8),\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(1)\n  },\n  greenIcon: {\n    color: 'green'\n  },\n  redIcon: {\n    color: 'red'\n  }\n}));\n\nfunction AdPodList() {\n  const classes = useStyles();\n\n  const adTrackingContext = useContext(AdTrackingContext);\n\n  if (adTrackingContext === undefined) {\n    throw new Error('AdTrackingContext is undefined');\n  }\n\n  const [expandPods, setExpandPods] = useState<{[key: string]: boolean}>({});\n\n  const [expandAds, setExpandAds] = useState<{[key: string]: boolean}>({});\n\n  const pods = adTrackingContext.adPods || [];\n\n  const playheadInMs = adTrackingContext.lastPlayheadTime;\n\n  const shouldExpandPod = (pod: AdBreak): boolean => {\n    const keepPastPodFor = 2000;\n    if (pod.id in expandPods) {\n      return expandPods[pod.id];\n    } else {\n      return playheadInMs !== null && playheadInMs < pod.startTime + pod.duration + keepPastPodFor;\n    }\n  }\n\n  const toggleExpandPod = (pod: AdBreak) => {\n    const newState = {\n      ...expandPods,\n      [pod.id]: !shouldExpandPod(pod)\n    };\n    Object.keys(expandPods)\n      .filter(key => !pods.find(p => p.id === key))\n      .forEach(key => delete newState[key]);\n    setExpandPods(newState);\n  }\n\n  const shouldExpandAd = (ad: Ad, pod: AdBreak) => {\n    const keepPastAdFor = 2000;\n    if (pod.id + '/' + ad.id in expandAds) {\n      return expandAds[pod.id + '/' + ad.id];\n    } else {\n      return playheadInMs !== null && playheadInMs < ad.startTime + ad.duration + keepPastAdFor;\n    }\n  }\n\n  const toggleExpandAd = (ad: Ad, pod: AdBreak) => {\n    const newState = {\n      ...expandAds,\n      [pod.id + '/' + ad.id]: !shouldExpandAd(ad, pod)\n    };\n    Object.keys(expandAds)\n      .filter(key => !pods.find(p => key.startsWith(p.id + '/')))\n      .forEach(key => delete newState[key]);\n    setExpandAds(newState);\n  };\n\n  return (\n    <div className=\"ad-pod-list\">\n      {pods ?\n        <List>\n          {pods.map((pod) =>\n            <div key={pod.id}>\n              <ListItem button onClick={() => toggleExpandPod(pod)} className={pod.startTime < playheadInMs && playheadInMs < pod.startTime + pod.duration ? classes.podItemOnAir : classes.podItem}>\n                <ListItemIcon>\n                  <FolderIcon />\n                </ListItemIcon>\n                <ListItemText disableTypography className={classes.itemText}>\n                  <div>\n                    Ad Pod: {pod.id}\n                  </div>\n                  <div>\n                    Time: {new Date(pod.startTime).toLocaleString()}, Duration: {(pod.duration / 1000).toFixed(1)}s\n                  </div>\n                </ListItemText>\n                {shouldExpandPod(pod) ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse key={pod.id + \".ads\"} in={shouldExpandPod(pod)} timeout=\"auto\" unmountOnExit>\n                <List>\n                  {pod.ads.map((ad) =>\n                    <div key={ad.id}>\n                      <ListItem button onClick={() => toggleExpandAd(ad, pod)} className={ad.startTime < playheadInMs && playheadInMs < ad.startTime + ad.duration ? classes.adItemOnAir : classes.adItem}>\n                        <ListItemIcon>\n                          <MovieIcon />\n                        </ListItemIcon>\n                        <ListItemText disableTypography className={classes.itemText}>\n                          <div>\n                            Ad: {ad.id}\n                          </div>\n                          <div>\n                            Time: {new Date(ad.startTime).toLocaleString()}, Duration: {(ad.duration / 1000).toFixed(1)}s\n                          </div>\n                        </ListItemText>\n                        {shouldExpandAd(ad, pod) ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse key={ad.id + \".trackingUrls\"} in={shouldExpandAd(ad, pod)} timeout=\"auto\" unmountOnExit>\n                        <List>\n                          {ad.trackingEvents ?\n                            ad.trackingEvents.map((trackingUrl,index) =>\n                              <ListItem key={index} className={classes.trackingUrlItem}>\n                                <ListItemIcon>\n                                  {trackingUrl.reportingState === \"IDLE\" ? <RadioButtonUncheckedIcon /> : null}\n                                  {trackingUrl.reportingState === \"REPORTING\" ? <HourglassFullIcon /> : null}\n                                  {trackingUrl.reportingState === \"DONE\" ? <CheckCircleIcon className={classes.greenIcon} /> : null}\n                                  {trackingUrl.reportingState === \"ERROR\" ? <ErrorIcon className={classes.redIcon} /> : null}\n                                </ListItemIcon>\n                                <ListItemText disableTypography className={classes.itemText}>\n                                  <div>\n                                    Event: {trackingUrl.event}\n                                  </div>\n                                  <div>\n                                    URL: {trackingUrl.signalingUrls}\n                                  </div>\n                                  {trackingUrl.startTime ?\n                                    <div>\n                                      Time: {new Date(trackingUrl.startTime).toLocaleString()}\n                                    </div>\n                                    : null}\n                                </ListItemText>\n                              </ListItem>\n                            )\n                            : null\n                          }\n                        </List>\n                      </Collapse>\n                    </div>\n                  )}\n                </List>\n              </Collapse>\n            </div>\n          )}\n        </List>\n        : null\n      }\n    </div>\n  );\n}\n\nexport default AdPodList;\n","import React, { useState } from 'react';\nimport ErrorContextInterface, {Errors} from \"../types/ErrorContextInterface\";\n\nconst ErrorContext = React.createContext<ErrorContextInterface>({\n    errors: {},\n    reportError: () => {},\n    acknowledgeError: () => {}\n});\n\nfunction DefaultErrorContextProvider(props: any) {\n    const [errors, setErrors] = useState<Errors>({});\n\n    const reportError = (key: string, message: string) => {\n        setErrors({\n            ...errors,\n            [key]: {\n                message: message,\n                acknowledged: false\n            }\n        });\n    }\n\n    const acknowledgeError = (key: string) => {\n        const error = errors[key];\n        if (error) {\n            setErrors({\n                ...errors,\n                [key]: {\n                    ...error,\n                    acknowledged: true\n                }\n            });\n        }\n    }\n\n    return (\n        <ErrorContext.Provider value={{errors, reportError, acknowledgeError}}>\n            {props.children}\n        </ErrorContext.Provider>\n    );\n}\n\nexport { ErrorContext, DefaultErrorContextProvider } ;\n","// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from 'react';\n\nfunction useInterval(callback: () => void, delay?: number) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      if (!savedCallback.current) return;\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","import React from 'react';\nimport SessionContextInterface from \"../types/SessionContextInterface\";\n\nconst SessionContext = React.createContext<SessionContextInterface | undefined>(undefined);\n\nexport default SessionContext;\n","import SimpleAdTrackerInterface from \"../types/SimpleAdTrackerInterface\";\nimport {Ad, AdBreak, TrackingEvent} from \"../types/AdBeacon\";\n\nconst AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS = 500;\nconst MAX_TOLERANCE_IN_SPEED = 2;\n\nconst mergePods = (existingPods: AdBreak[], pods: AdBreak[]) => {\n    let updated = false;\n\n    for (let i = existingPods.length - 1; i >= 0; i--) {\n        const podId = existingPods[i].id;\n        if (!pods.find(p => p.id === podId)) {\n            existingPods.splice(i, 1);\n            updated = true;\n        }\n    }\n    pods.forEach((pod) => {\n        let existingPod = existingPods.find(p => p.id === pod.id);\n        if (!existingPod) {\n            existingPod = {\n                id: pod.id,\n                startTime: pod.prftStartTime || pod.startTime,\n                duration: pod.duration,\n                ads: []\n            };\n            existingPods.push(existingPod);\n            updated = true;\n        } else if (existingPod.duration !== pod.duration) {\n            existingPod.duration = pod.duration;\n            updated = true;\n        }\n        updated = mergeAds(existingPod.ads, pod.ads) || updated;\n    });\n\n    return updated;\n}\n\nconst mergeAds = (existingAds: Ad[], ads: Ad[]) => {\n    let updated = false;\n\n    for (let i = existingAds.length - 1; i >= 0; i--) {\n        const adId = existingAds[i].id;\n        if (!ads.find(a => a.id === adId)) {\n            existingAds.splice(i, 1);\n            updated = true;\n        }\n    }\n    ads.forEach((ad) => {\n        let existingAd = existingAds.find(a => a.id === ad.id);\n        if (!existingAd) {\n            existingAd = {\n                id: ad.id,\n                startTime: ad.prftStartTime || ad.startTime,\n                duration: ad.duration,\n                trackingEvents: ad.trackingEvents.map(t => ({\n                    event: t.event,\n                    startTime: t.prftStartTime || t.startTime,\n                    signalingUrls: t.signalingUrls,\n                    reportingState: \"IDLE\"\n                }))\n            };\n            existingAds.push(existingAd);\n            updated = true;\n        } else if (existingAd.duration !== ad.duration) {\n            existingAd.duration = ad.duration;\n            updated = true;\n        }\n    });\n\n    return updated;\n}\n\nexport default class SimpleAdTracker implements SimpleAdTrackerInterface {\n    adPods: AdBreak[];\n    lastPlayheadTime: number;\n    private lastPlayheadUpdateTime: number;\n    private listeners: (() => void)[];\n\n    constructor() {\n        this.adPods = [];\n        this.lastPlayheadTime = 0;\n        this.lastPlayheadUpdateTime = 0;\n        this.listeners = [];\n    }\n\n    addUpdateListener(listener: () => void) {\n        this.listeners.push(listener);\n    }\n\n    removeUpdateListener(listener: () => void) {\n        const index = this.listeners.indexOf(listener);\n        if (index !== -1) {\n            this.listeners.splice(index, 1);\n        }\n    }\n\n    updatePods(pods: AdBreak[]) {\n        const updated = mergePods(this.adPods, pods);\n        if (updated) {\n            this.notifyListeners();\n        }\n    }\n\n    needSendBeacon(time: number, prft: boolean) {\n        const now = new Date().getTime();\n        if (this.lastPlayheadUpdateTime) {\n            if (now === this.lastPlayheadUpdateTime) {\n                return;\n            }\n\n            const speed = (time - this.lastPlayheadTime) / (now - this.lastPlayheadUpdateTime);\n            if (speed > 0 && speed <= MAX_TOLERANCE_IN_SPEED) {\n                this.iterateTrackingEvents((trackingUrl) => {\n                    const startTime = prft ? trackingUrl.prftStartTime : trackingUrl.startTime;\n                    if (startTime && trackingUrl.reportingState === \"IDLE\" &&\n                        this.lastPlayheadTime < startTime && startTime <= time) {\n                        this.sendBeacon(trackingUrl);\n                    }\n                }, this.lastPlayheadTime, time);\n            }\n        }\n        this.lastPlayheadTime = time;\n        this.lastPlayheadUpdateTime = now;\n    }\n\n    updatePlayheadTime(time: number) {\n        this.needSendBeacon(time, false);\n    }\n\n    updatePrftPlayheadTime(time: number): void {\n        this.needSendBeacon(time, true);\n    }\n\n    updateRawPlayheadTime(time: number): void {}\n\n    getAdPods() {\n        return this.adPods;\n    }\n\n    pause() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"pause\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    resume() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"resume\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    mute() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"mute\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    unmute() {\n        this.iterateTrackingEvents((trackingUrl) => {\n            if (trackingUrl.event === \"unmute\") {\n                this.sendBeacon(trackingUrl);\n            }\n        });\n    }\n\n    // private\n\n    notifyListeners() {\n        this.listeners.forEach((listener) => {\n            listener();\n        });\n    };\n\n    iterateTrackingEvents(handler: (a: TrackingEvent, b: Ad, c: AdBreak) => void, time0 = this.lastPlayheadTime, time1 = this.lastPlayheadTime, prft = false) {\n        this.adPods.forEach((pod) => {\n            const podStartTime = (prft ? pod.prftStartTime : pod.startTime) || 0;\n            if (podStartTime <= time1 && time0 <= podStartTime + pod.duration + AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS) {\n                pod.ads.forEach((ad) => {\n                    const adStartTime = (prft ? ad.prftStartTime : ad.startTime) || 0;\n                    if (adStartTime <= time1 && time0 <= adStartTime + ad.duration + AD_END_TRACKING_EVENT_TIME_TOLERANCE_MS) {\n                        ad.trackingEvents.forEach((trackingUrl) => {\n                            handler(trackingUrl, ad, pod);\n                        });\n                    }\n                });\n            }\n        });\n    }\n\n    async sendBeacon(trackingUrl: TrackingEvent) {\n        trackingUrl.reportingState = \"REPORTING\";\n        this.notifyListeners();\n\n        try {\n            let i = 0;\n            for (const url of trackingUrl.signalingUrls) {\n                const response = await fetch(url);\n                if (response.status >= 200 && response.status <= 299) {\n                    i++;\n                } else {\n                    console.error(`Failed to send beacon to ${url}; Status ${response.status}`);\n                }\n            }\n            trackingUrl.reportingState = i === trackingUrl.signalingUrls.length ? \"DONE\" : \"ERROR\";\n        } catch (err) {\n            trackingUrl.reportingState = \"ERROR\";\n        }\n        this.notifyListeners();\n    };\n}\n","import {useState, useEffect, useRef, useContext, useCallback} from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport useInterval from './useInterval';\nimport { ErrorContext } from './ErrorContext';\nimport AdTrackingContext from './AdTrackingContext';\nimport SessionContext from './SessionContext';\nimport SimpleAdTracker from './SimpleAdTracker';\nimport SimpleAdTrackerInterface from \"../types/SimpleAdTrackerInterface\";\nimport SessionContextInterface from \"../types/SessionContextInterface\";\nimport AdBeacon, {DataRange} from \"../types/AdBeacon\";\nimport ErrorContextInterface from \"../types/ErrorContextInterface\";\n\nconst AdTrackingPlaybackSessionProvider = (props: any) => {\n    const AD_TRACING_METADATA_FILE_NAME = \"metadata\";\n\n    // Fetch the next metadata n ms early. Used in isInRange().\n    const EARLY_FETCH_MS = 5000;\n\n    const history = useHistory();\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const urlQueryParam = searchParams.get(\"url\");\n\n    const errorContext = useContext<ErrorContextInterface>(ErrorContext);\n\n    const adTrackerRef = useRef<SimpleAdTracker>();\n    const [presentationStartTime, setPresentationStartTime] = useState(null);\n\n    const [sessionInfo, setSessionInfo] = useState({\n        localSessionId: \"\",\n        mediaUrl: urlQueryParam,\n        manifestUrl: null,\n        adTrackingMetadataUrl: \"\",\n    });\n    const [lastPlayheadTime, setLastPlayheadTime] = useState(0);\n    const [lastRawPlayheadTime, setLastRawPlayheadTime] = useState(0);\n    const [lastPrftPlayheadTime, setLastPrftPlayheadTime] = useState(0);\n    const [adPods, setAdPods] = useState<any>([]);\n    const [lastDataRange, setLastDataRange] = useState<DataRange>({\n        start: 0,\n        end: 0,\n    });\n\n    const rewriteUrlToMetadataUrl = (url: string) => {\n        return url.replace(/\\/[^/?]+(\\??[^/]*)$/, '/' + AD_TRACING_METADATA_FILE_NAME + '$1');\n    }\n\n    const refreshMetadata = useCallback(async (url: string, time = 0, prft = false): Promise<boolean> => {\n        const isInRange = (time: number, prft: boolean, range?: DataRange) => {\n            // Bypass checking only if time === 0, not null | undefined\n            // Happens on initial load.\n            if (time === 0) return true;\n            const dataRange = range || lastDataRange;\n            if (prft && dataRange.prftStart && dataRange.prftEnd) {\n                return time >= dataRange.prftStart && time <= dataRange.prftEnd - EARLY_FETCH_MS;\n            } else {\n                return time >= dataRange.start && time <= dataRange.end - EARLY_FETCH_MS;\n            }\n        }\n\n        console.log(`refreshMetadata: ${url}`);\n        if (url) {\n            try {\n                const response = await fetch(url);\n                if (response.status < 200 || response.status > 299) {\n                    throw new Error(`Get unexpected response code ${response.status}`);\n                }\n                const json: AdBeacon = await response.json();\n                setLastDataRange(json.dataRange);\n\n                if (!isInRange(time, prft, json.dataRange)) {\n                    console.log(`Invalid metadata: Not in range. Time: ${time}, PRFT: ${prft}`, json.dataRange);\n                    return false;\n                }\n\n                if (adTrackerRef.current !== undefined) {\n                    adTrackerRef.current.updatePods(json.adBreaks || []);\n                    return true;\n                }\n            } catch (err) {\n                console.error(\"Failed to download metadata for ad tracking\", err);\n                errorContext.reportError(\"metadata.request.failed\", \"Failed to download metadata for ad tracking: \" + err);\n            }\n        }\n        return false;\n    }, [errorContext, lastDataRange]);\n\n    const loadMedia = useCallback(async (url) => {\n        let manifestUrl, adTrackingMetadataUrl;\n        try {\n            const response = await fetch(url, { redirect: 'follow', cache: 'reload' });\n            if (response.status < 200 || response.status > 299) {\n                throw new Error(`Get unexpected response code ${response.status}`);\n            }\n\n            if (response.redirected) {\n                manifestUrl = response.url;\n                adTrackingMetadataUrl = rewriteUrlToMetadataUrl(response.url);\n            } else {\n                manifestUrl = url;\n                adTrackingMetadataUrl = rewriteUrlToMetadataUrl(url);\n            }\n        } catch (err) {\n            errorContext.reportError(\"manifest.request.failed\", \"Failed to download manifest: \" + err);\n            return;\n        }\n\n        // workaround HLS issue that video stream needs to get first otherwise there is error \"Manipulated manifest does not contain any segments\"\n        if (manifestUrl.includes('index.m3u8')) {\n            await fetch(manifestUrl.replace(\"index.m3u8\", \"01.m3u8\"));\n        }\n\n        setAdPods([]);\n        adTrackerRef.current = new SimpleAdTracker();\n        const pods = adTrackerRef.current.getAdPods();\n        adTrackerRef.current.addUpdateListener(() => {\n            setAdPods([...pods]);  // trigger re-render\n        });\n\n        setSessionInfo({\n            localSessionId: new Date().toISOString(),\n            mediaUrl: url,\n            manifestUrl: manifestUrl,\n            adTrackingMetadataUrl: adTrackingMetadataUrl\n        });\n\n        await refreshMetadata(adTrackingMetadataUrl);\n    }, [refreshMetadata, errorContext]);\n\n    const unload = () => {\n        setAdPods([]);\n        adTrackerRef.current = new SimpleAdTracker();\n        const pods = adTrackerRef.current.getAdPods();\n        adTrackerRef.current.addUpdateListener(() => {\n            setAdPods([...pods]);  // trigger re-render\n        });\n\n        setPresentationStartTime(null);\n\n        setSessionInfo({\n            localSessionId: \"\",\n            mediaUrl: null,\n            manifestUrl: null,\n            adTrackingMetadataUrl: \"\"\n        });\n    }\n\n    useEffect(() => {\n        if (sessionInfo.mediaUrl && !sessionInfo.localSessionId) {\n            loadMedia(sessionInfo.mediaUrl);\n        }\n    }, [loadMedia, sessionInfo]);\n\n    useInterval(async () => {\n        const isInRange = (time: number, prft: boolean) => {\n            if (prft && lastDataRange.prftStart && lastDataRange.prftEnd) {\n                return time >= lastDataRange.prftStart && time <= lastDataRange.prftEnd - EARLY_FETCH_MS;\n            } else {\n                return time >= lastDataRange.start && time <= lastDataRange.end - EARLY_FETCH_MS;\n            }\n        }\n\n        console.log(`PRFT: ${lastPrftPlayheadTime}; In range: ${isInRange(lastPrftPlayheadTime, true)}`);\n        console.log(`Raw: ${lastRawPlayheadTime}; In range: ${isInRange((lastRawPlayheadTime), false)}`);\n\n        let url = sessionInfo.adTrackingMetadataUrl;\n        if (!url) return;\n\n        if (lastPrftPlayheadTime > 0) {\n            if (!isInRange(lastPrftPlayheadTime, true) &&\n                !(await refreshMetadata(url, lastPrftPlayheadTime, true))) {\n                    url = `${url}&prftStart=${lastPrftPlayheadTime}`;\n                    refreshMetadata(url);\n            }\n        } else if (lastRawPlayheadTime &&\n            !isInRange((lastRawPlayheadTime), false) &&\n            !(await refreshMetadata(url, lastRawPlayheadTime, false))) {\n            url = `${url}&start=${lastRawPlayheadTime}`;\n            refreshMetadata(url);\n        }\n    }, 4000);\n\n    const sessionContext: SessionContextInterface = {\n        sessionInfo: sessionInfo,\n        presentationStartTime: presentationStartTime,\n        load: (url) => {\n            history.replace(\"?url=\" + encodeURIComponent(url));\n            return loadMedia(url);\n        },\n        unload: unload\n    };\n\n    const adTrackingContext: SimpleAdTrackerInterface = {\n        adPods: adPods,\n        lastPlayheadTime: lastPlayheadTime,\n        updatePlayheadTime: (time) => {\n            adTrackerRef.current?.updatePlayheadTime(time);\n            setLastPlayheadTime(time);\n        },\n        updatePrftPlayheadTime: (time) => {\n            setLastPrftPlayheadTime(time);\n        },\n        updateRawPlayheadTime: (time) => {\n            setLastRawPlayheadTime(time);\n        },\n        pause: () => adTrackerRef.current?.pause(),\n        resume: () => adTrackerRef.current?.resume(),\n        mute: () => adTrackerRef.current?.mute(),\n        unmute: () => adTrackerRef.current?.unmute()\n    };\n\n    return (\n        <SessionContext.Provider value={sessionContext}>\n            <AdTrackingContext.Provider value={adTrackingContext}>\n                {props.children}\n            </AdTrackingContext.Provider>\n        </SessionContext.Provider>\n    );\n};\n\nexport default AdTrackingPlaybackSessionProvider;\n","import React, {Component, createRef} from \"react\";\nimport \"@harmonicinc/shaka-player/dist/controls.css\";\nimport muxjs from 'mux.js';\n\nimport \"@harmonicinc/shaka-player/dist/shaka-player.ui\";\n// @ts-ignore\nimport shaka from \"@harmonicinc/shaka-player/dist/shaka-player.ui\";\nimport ShakaPlayerInterface from \"../types/ShakaPlayerInterface\";\nimport ShakaPlayerProps from \"../types/ShakaPlayerProps\";\n\nclass ShakaPlayer extends Component<ShakaPlayerProps> implements ShakaPlayerInterface {\n  player: shaka.Player | null;\n\n  private readonly videoRef: React.RefObject<HTMLVideoElement>;\n  private readonly containerRef: React.RefObject<HTMLDivElement>;\n  private lastMuted: boolean;\n  private paused: boolean;\n\n  constructor(props: ShakaPlayerProps) {\n    super(props);\n    this.videoRef = createRef();\n    this.containerRef = createRef();\n    this.player = null;\n    this.lastMuted = false;\n    this.paused = false;\n  }\n\n\n  componentDidMount() {\n    window.muxjs = muxjs;\n\n    const video = this.videoRef.current;\n    const container = this.containerRef.current;\n\n    if (!video || !container) return;\n\n    this.player = new shaka.Player(video);\n    this.player.configure('manifest.defaultPresentationDelay', 12.0 /* seconds */);\n    this.player.configure('manifest.dash.ignoreSuggestedPresentationDelay', true);\n    this.lastMuted = video.muted;\n\n    if (!this.player) return;\n\n    const ui = new shaka.ui.Overlay(this.player, container, video);\n    ui.configure({\n      controlPanelElements: [\n        \"play_pause\",\n        \"mute\",\n        \"volume\",\n        \"fullscreen\",\n        \"overflow_menu\"\n      ]\n    });\n\n    video.addEventListener('error', (err) => this.props.onError?.(err));\n    video.addEventListener('playing', () => {\n      if (!ui.getControls()?.isSeeking()) {\n        if (this.paused) {\n          this.props.onResume?.();\n          this.paused = false;\n        }\n      }\n    });\n    video.addEventListener('pause', () => {\n      if (!ui.getControls()?.isSeeking()) {\n        this.props.onPaused?.();\n        this.paused = true;\n      }\n    });\n    video.addEventListener('volumechange', () => {\n      if (video.muted && !this.lastMuted) {\n        this.props.onMute?.();\n      } else if (!video.muted && this.lastMuted) {\n        this.props.onUnmute?.();\n      }\n      this.lastMuted = video.muted;\n    });\n  }\n\n  load(url: string) {\n    this.player?.load(url);\n    this.paused = false;\n  }\n\n  unload() {\n    this.player?.unload();\n    this.paused = false;\n  }\n\n  getPlayheadTimeAsDate() {\n    return this.player?.getPlayheadTimeAsDate() || null;\n  }\n\n  getRawVideoTime() {\n    return this.videoRef.current?.currentTime || null;\n  }\n\n  getPresentationLatencyInfo(): {type: string, latency: number, wallClock: Date} {\n    return this.player?.getPresentationLatencyInfo() || null;\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.containerRef}\n        style={{ maxWidth: this.props.width }}>\n        <video\n            data-shaka-player\n            ref={this.videoRef}\n            style={{ width: \"100%\", height: \"100%\", backgroundColor: \"black\" }}\n            autoPlay={true}>\n        </video>\n      </div>\n    );\n  }\n}\n\nexport default ShakaPlayer;\n","import { useContext, useEffect, useRef, useState } from 'react';\nimport ShakaPlayer from './ShakaPlayer';\nimport SessionContext from './SessionContext';\nimport AdTrackingContext from './AdTrackingContext';\nimport useInterval from './useInterval';\nimport SessionContextInterface from \"../types/SessionContextInterface\";\nimport SimpleAdTrackerInterface from \"../types/SimpleAdTrackerInterface\";\n\nfunction PlayerContainer() {\n    const sessionContext = useContext<SessionContextInterface | undefined>(SessionContext);\n\n    if (sessionContext === undefined) {\n        throw new Error('SessionContext is undefined');\n    }\n\n    const sessionInfo = sessionContext.sessionInfo;\n\n    const adTrackingContext = useContext<SimpleAdTrackerInterface | undefined>(AdTrackingContext);\n\n    if (adTrackingContext === undefined) {\n        throw new Error('SessionContext is undefined');\n    }\n\n    const shakaRef = useRef<ShakaPlayer>(null);\n\n    const localSessionRef = useRef<any>();\n\n    const [rawCurrentTime, setRawCurrentTime] = useState(0);\n\n    const [playhead, setPlayhead] = useState(0);\n\n    const updateTime = (time: number) => {\n        setRawCurrentTime(time);\n\n        if (sessionInfo.manifestUrl?.includes(\".m3u8\")) {\n            const clockTime = shakaRef.current?.getPlayheadTimeAsDate()?.getTime() || 0;\n            adTrackingContext.updateRawPlayheadTime(clockTime);\n            adTrackingContext.updatePlayheadTime(clockTime);\n            setPlayhead(clockTime);\n        } else if (sessionInfo.manifestUrl?.includes(\".mpd\")) {\n            const prftClockTime = shakaRef.current?.getPresentationLatencyInfo()?.wallClock.getTime() || 0;\n            const clockTime = shakaRef.current?.getPlayheadTimeAsDate()?.getTime() || 0;\n            adTrackingContext.updateRawPlayheadTime(time * 1000);\n            adTrackingContext.updatePlayheadTime(clockTime);\n            adTrackingContext.updatePrftPlayheadTime(prftClockTime);\n            setPlayhead(clockTime);\n        }\n    };\n\n    const onError = (error: ErrorEvent) => {\n      console.error(\"Error from player\", error);\n    }\n\n    const timeToNextBreak = Math.min(Infinity,\n        ...adTrackingContext.adPods.filter(p => p.startTime > playhead).map(p => p.startTime)) - playhead;\n\n    useInterval(() => {\n        const time = shakaRef.current?.getRawVideoTime();\n        if (time) updateTime(time);\n    }, 500);\n\n    useEffect(() => {\n        if (shakaRef.current && localSessionRef.current !== sessionInfo.localSessionId) {\n            if (sessionInfo.manifestUrl) {\n                shakaRef.current.load(sessionInfo.manifestUrl);\n            } else {\n                shakaRef.current.unload();\n            }\n            localSessionRef.current = sessionInfo.localSessionId\n        }\n    }, [shakaRef, sessionInfo]);\n\n    return (\n        <div>\n            <ShakaPlayer ref={shakaRef}\n                onPaused={() => {\n                    console.log('playback paused');\n                    adTrackingContext.pause();\n                }}\n                onResume={() =>{\n                    console.log('playback resumed from pause');\n                    adTrackingContext.resume()\n                }}\n                onMute={() => {\n                    console.log('player muted');\n                    adTrackingContext.mute();\n                }}\n                onUnmute={() => {\n                    console.log('player unmute');\n                    adTrackingContext.unmute();\n                }}\n                onError={onError}/>\n            <div>\n                Raw currentTime from video element: {rawCurrentTime ? rawCurrentTime.toFixed(0) : 0}s\n            </div>\n            <div>\n                Playhead date time: {playhead ? new Date(playhead).toLocaleString() : '-'}\n            </div>\n            <div>\n                Time to next ad break: {timeToNextBreak !== Infinity ? Math.ceil(timeToNextBreak/1000).toFixed(0) + 's' : '-'}\n            </div>\n        </div>\n    );\n}\n\nexport default PlayerContainer;\n","import React, { useContext, useRef, MouseEvent } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { Box, Button, Link, Snackbar, TextField, Typography } from '@mui/material';\nimport MuiAlert from '@mui/material/Alert';\nimport { ErrorContext } from './ErrorContext';\nimport SessionContext from './SessionContext';\nimport {theme} from \"./App\";\n\nconst useStyles = makeStyles(() => ({\n  buttons: {\n    '& > *': {\n      marginRight: theme.spacing(1),\n    },\n  }\n}));\n\nfunction InfoSection() {\n  const classes = useStyles();\n\n  const errorContext = useContext(ErrorContext);\n\n  const sessionContext = useContext(SessionContext);\n\n  if (sessionContext === undefined) {\n    throw new Error('SessionContext is undefined');\n  }\n\n  const sessionInfo = sessionContext.sessionInfo;\n\n  const urlInputRef = useRef<any>();\n\n  const preventDefault = (event: MouseEvent<HTMLAnchorElement | HTMLSpanElement>) => event.preventDefault();\n\n  const load = async () => {\n    await sessionContext.load(urlInputRef.current.value);\n  }\n\n  const unload = () => {\n    sessionContext.unload();\n  }\n\n  const closeAlert = (errorKey: string) => {\n    errorContext.acknowledgeError(errorKey);\n  }\n\n  return (\n    <div>\n      {\n        Object.entries(errorContext.errors).map(([key, error], i) => (\n          <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} open={!error.acknowledged} key={i}>\n            <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={() => closeAlert(key)}>\n              {error.message}\n            </MuiAlert>\n          </Snackbar>\n        ))\n      }\n\n      <Typography variant=\"h5\" gutterBottom>\n        Harmonic Client Side Ad Tracking Demo\n      </Typography>\n      <TextField inputRef={urlInputRef} label=\"Media URL\" fullWidth={true} defaultValue={sessionInfo.mediaUrl || ''} variant={'standard'} />\n      <Box className={classes.buttons} width={1} paddingTop={2} display=\"flex\" flexDirection=\"row\">\n        <Button variant=\"contained\" color=\"primary\" onClick={load}>\n          Load\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={unload}>\n          Unload\n        </Button>\n      </Box>\n      <Box width={1} paddingTop={2} display=\"flex\" flexDirection=\"row\">\n        <Link href=\"#\" color=\"inherit\" onClick={preventDefault} underline=\"hover\">\n          {sessionInfo.manifestUrl ? sessionInfo.manifestUrl : ''}\n        </Link>\n      </Box>\n      <Box width={1} paddingTop={1} display=\"flex\" flexDirection=\"row\">\n        <Link href=\"#\" color=\"inherit\" onClick={preventDefault} underline=\"hover\">\n          {sessionInfo.adTrackingMetadataUrl ? sessionInfo.adTrackingMetadataUrl : ''}\n        </Link>\n      </Box>\n    </div>\n  );\n}\n\nexport default InfoSection;\n","import './App.css'\nimport { createTheme, ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Container from '@mui/material/Container'\nimport Grid from '@mui/material/Grid'\nimport Paper from '@mui/material/Paper'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport AdPodList from './AdPodList'\nimport { DefaultErrorContextProvider } from './ErrorContext'\nimport AdTrackingPlaybackSessionProvider\n  from './AdTrackingPlaybackSessionProvider'\nimport PlayerContainer from './PlayerContainer'\nimport InfoSection from './InfoSection'\nimport { Route, BrowserRouter } from 'react-router-dom'\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: '#3f51b5',\n    },\n    secondary: {\n      main: '#e0e0e0',\n    },\n  },\n})\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}))\n\nfunction App () {\n  const classes = useStyles()\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter basename=\"/client-side-ad-tracking-demo\">\n          <Route exact path=\"/\">\n            <DefaultErrorContextProvider>\n              <AdTrackingPlaybackSessionProvider>\n                <Container>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                      <Paper square className={classes.paper}>\n                        <InfoSection/>\n                      </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <Paper square className={classes.paper}>\n                        <PlayerContainer/>\n                      </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <Paper square className={classes.paper}>\n                        <Tabs\n                          value={0}\n                          indicatorColor=\"primary\"\n                          textColor=\"primary\">\n                          <Tab label=\"Tracking Events\"/>\n                        </Tabs>\n                        <AdPodList/>\n                      </Paper>\n                    </Grid>\n                  </Grid>\n                </Container>\n              </AdTrackingPlaybackSessionProvider>\n            </DefaultErrorContextProvider>\n          </Route>\n        </BrowserRouter>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nif (process.env.NODE_ENV === 'production') {\n    console.log = () => {}\n    console.debug = () => {}\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}